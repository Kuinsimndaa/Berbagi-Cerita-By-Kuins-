{
  "version": 3,
  "sources": ["../../vite-plugin-pwa/dist/chunk-G4TAN34B.js"],
  "sourcesContent": ["import {\n  cyan,\n  dim,\n  green,\n  magenta,\n  yellow\n} from \"./chunk-LKBIOQSP.js\";\n\n// src/utils.ts\nfunction slash(str) {\n  return str.replace(/\\\\/g, \"/\");\n}\nfunction resolveBasePath(base) {\n  if (isAbsolute(base))\n    return base;\n  return !base.startsWith(\"/\") && !base.startsWith(\"./\") ? `/${base}` : base;\n}\nfunction isAbsolute(url) {\n  return url.match(/^(?:[a-z]+:)?\\/\\//i);\n}\nfunction normalizePath(path) {\n  return path.replace(/\\\\/g, \"/\");\n}\n\n// src/log.ts\nimport { relative } from \"node:path\";\nfunction logSWViteBuild(version, swName, viteOptions, format) {\n  const { logLevel = \"info\" } = viteOptions;\n  if (logLevel === \"silent\")\n    return;\n  if (logLevel === \"info\") {\n    console.info([\n      \"\",\n      `${cyan(`PWA v${version}`)}`,\n      `Building ${magenta(swName)} service worker (\"${magenta(format)}\" format)...`\n    ].join(\"\\n\"));\n  }\n}\nfunction logWorkboxResult(version, throwMaximumFileSizeToCacheInBytes, strategy, buildResult, viteOptions, format = \"none\") {\n  if (throwMaximumFileSizeToCacheInBytes) {\n    const entries = buildResult.warnings.filter((w) => w.includes(\"maximumFileSizeToCacheInBytes\"));\n    if (entries.length) {\n      const prefix = strategy === \"generateSW\" ? \"workbox\" : \"injectManifest\";\n      throw new Error(`\n  Configure \"${prefix}.maximumFileSizeToCacheInBytes\" to change the limit: the default value is 2 MiB.\n  Check https://vite-pwa-org.netlify.app/guide/faq.html#missing-assets-from-sw-precache-manifest for more information.\n  Assets exceeding the limit:\n${entries.map((w) => `  - ${w.replace(\". Configure maximumFileSizeToCacheInBytes to change this limit\", \"\")}`).join(\"\\n\")}\n`);\n    }\n  }\n  const { root, logLevel = \"info\" } = viteOptions;\n  if (logLevel === \"silent\")\n    return;\n  const { count, size, filePaths, warnings } = buildResult;\n  if (logLevel === \"info\") {\n    const entries = [\n      \"\",\n      `${cyan(`PWA v${version}`)}`,\n      `mode      ${magenta(strategy)}`\n    ];\n    if (strategy === \"injectManifest\")\n      entries.push(`format:   ${magenta(format)}`);\n    entries.push(\n      `precache  ${green(`${count} entries`)} ${dim(`(${(size / 1024).toFixed(2)} KiB)`)}`,\n      \"files generated\",\n      ...filePaths.map((p) => `  ${dim(normalizePath(relative(root, p)))}`)\n    );\n    console.info(entries.join(\"\\n\"));\n  }\n  warnings && warnings.length > 0 && console.warn(yellow([\n    \"warnings\",\n    ...warnings.map((w) => `  ${w}`),\n    \"\"\n  ].join(\"\\n\")));\n}\n\nexport {\n  slash,\n  resolveBasePath,\n  normalizePath,\n  logSWViteBuild,\n  logWorkboxResult\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;AAyBA,uBAAyB;AAhBzB,SAAS,MAAM,KAAK;AAClB,SAAO,IAAI,QAAQ,OAAO,GAAG;AAC/B;AACA,SAAS,gBAAgB,MAAM;AAC7B,MAAI,WAAW,IAAI;AACjB,WAAO;AACT,SAAO,CAAC,KAAK,WAAW,GAAG,KAAK,CAAC,KAAK,WAAW,IAAI,IAAI,IAAI,IAAI,KAAK;AACxE;AACA,SAAS,WAAW,KAAK;AACvB,SAAO,IAAI,MAAM,oBAAoB;AACvC;AACA,SAAS,cAAc,MAAM;AAC3B,SAAO,KAAK,QAAQ,OAAO,GAAG;AAChC;AAIA,SAAS,eAAe,SAAS,QAAQ,aAAa,QAAQ;AAC5D,QAAM,EAAE,WAAW,OAAO,IAAI;AAC9B,MAAI,aAAa;AACf;AACF,MAAI,aAAa,QAAQ;AACvB,YAAQ,KAAK;AAAA,MACX;AAAA,MACA,GAAG,KAAK,QAAQ,OAAO,EAAE,CAAC;AAAA,MAC1B,YAAY,QAAQ,MAAM,CAAC,qBAAqB,QAAQ,MAAM,CAAC;AAAA,IACjE,EAAE,KAAK,IAAI,CAAC;AAAA,EACd;AACF;AACA,SAAS,iBAAiB,SAAS,oCAAoC,UAAU,aAAa,aAAa,SAAS,QAAQ;AAC1H,MAAI,oCAAoC;AACtC,UAAM,UAAU,YAAY,SAAS,OAAO,CAAC,MAAM,EAAE,SAAS,+BAA+B,CAAC;AAC9F,QAAI,QAAQ,QAAQ;AAClB,YAAM,SAAS,aAAa,eAAe,YAAY;AACvD,YAAM,IAAI,MAAM;AAAA,eACP,MAAM;AAAA;AAAA;AAAA,EAGnB,QAAQ,IAAI,CAAC,MAAM,OAAO,EAAE,QAAQ,kEAAkE,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC;AAAA,CACxH;AAAA,IACG;AAAA,EACF;AACA,QAAM,EAAE,MAAM,WAAW,OAAO,IAAI;AACpC,MAAI,aAAa;AACf;AACF,QAAM,EAAE,OAAO,MAAM,WAAW,SAAS,IAAI;AAC7C,MAAI,aAAa,QAAQ;AACvB,UAAM,UAAU;AAAA,MACd;AAAA,MACA,GAAG,KAAK,QAAQ,OAAO,EAAE,CAAC;AAAA,MAC1B,aAAa,QAAQ,QAAQ,CAAC;AAAA,IAChC;AACA,QAAI,aAAa;AACf,cAAQ,KAAK,aAAa,QAAQ,MAAM,CAAC,EAAE;AAC7C,YAAQ;AAAA,MACN,aAAa,MAAM,GAAG,KAAK,UAAU,CAAC,IAAI,IAAI,KAAK,OAAO,MAAM,QAAQ,CAAC,CAAC,OAAO,CAAC;AAAA,MAClF;AAAA,MACA,GAAG,UAAU,IAAI,CAAC,MAAM,KAAK,IAAI,kBAAc,2BAAS,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;AAAA,IACtE;AACA,YAAQ,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,EACjC;AACA,cAAY,SAAS,SAAS,KAAK,QAAQ,KAAK,OAAO;AAAA,IACrD;AAAA,IACA,GAAG,SAAS,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AAAA,IAC/B;AAAA,EACF,EAAE,KAAK,IAAI,CAAC,CAAC;AACf;",
  "names": []
}
