{
  "version": 3,
  "sources": ["../../vite-plugin-pwa/dist/index.js"],
  "sourcesContent": ["import {\n  logWorkboxResult,\n  normalizePath,\n  resolveBasePath,\n  slash\n} from \"./chunk-G4TAN34B.js\";\nimport {\n  DEV_PWA_ASSETS_NAME,\n  DEV_READY_NAME,\n  DEV_REGISTER_SW_NAME,\n  DEV_SW_NAME,\n  DEV_SW_VIRTUAL,\n  FILE_SW_REGISTER,\n  PWA_ASSETS_HEAD_VIRTUAL,\n  PWA_ASSETS_ICONS_VIRTUAL,\n  PWA_INFO_VIRTUAL,\n  RESOLVED_DEV_SW_VIRTUAL,\n  RESOLVED_PWA_ASSETS_HEAD_VIRTUAL,\n  RESOLVED_PWA_ASSETS_ICONS_VIRTUAL,\n  RESOLVED_PWA_INFO_VIRTUAL,\n  VIRTUAL_MODULES,\n  VIRTUAL_MODULES_MAP,\n  VIRTUAL_MODULES_RESOLVE_PREFIX,\n  defaultInjectManifestVitePlugins,\n  extractIcons,\n  generateRegisterDevSW,\n  generateRegisterSW,\n  generateSWHMR,\n  generateSimpleSWRegister,\n  generateWebManifest,\n  injectServiceWorker\n} from \"./chunk-I2Z7IWCN.js\";\nimport {\n  cyan,\n  yellow\n} from \"./chunk-LKBIOQSP.js\";\n\n// src/api.ts\nimport { existsSync } from \"node:fs\";\nimport { resolve as resolve2 } from \"node:path\";\n\n// src/assets.ts\nimport crypto from \"node:crypto\";\nimport fs from \"node:fs\";\nimport { resolve as resolveFs } from \"node:path\";\nimport { glob } from \"tinyglobby\";\nfunction buildManifestEntry(publicDir, url) {\n  return new Promise((resolve6, reject) => {\n    const cHash = crypto.createHash(\"MD5\");\n    const stream = fs.createReadStream(resolveFs(publicDir, url));\n    stream.on(\"error\", (err) => {\n      reject(err);\n    });\n    stream.on(\"data\", (chunk) => {\n      cHash.update(chunk);\n    });\n    stream.on(\"end\", () => {\n      return resolve6({\n        url,\n        revision: `${cHash.digest(\"hex\")}`\n      });\n    });\n  });\n}\nfunction lookupAdditionalManifestEntries(useInjectManifest, injectManifest, workbox) {\n  return useInjectManifest ? injectManifest.additionalManifestEntries || [] : workbox.additionalManifestEntries || [];\n}\nfunction normalizeIconPath(path) {\n  return path.startsWith(\"/\") ? path.substring(1) : path;\n}\nfunction includeIcons(icons, globs) {\n  Object.keys(icons).forEach((key) => {\n    const icon = icons[key];\n    const src = normalizeIconPath(icon.src);\n    if (!globs.includes(src))\n      globs.push(src);\n  });\n}\nasync function configureStaticAssets(resolvedVitePWAOptions, viteConfig) {\n  const {\n    manifest,\n    strategies,\n    injectManifest,\n    workbox,\n    includeAssets,\n    includeManifestIcons,\n    manifestFilename\n  } = resolvedVitePWAOptions;\n  const useInjectManifest = strategies === \"injectManifest\";\n  const { publicDir } = viteConfig;\n  const globs = [];\n  const manifestEntries = lookupAdditionalManifestEntries(\n    useInjectManifest,\n    injectManifest,\n    workbox\n  );\n  if (includeAssets) {\n    if (Array.isArray(includeAssets))\n      globs.push(...includeAssets.map(normalizeIconPath));\n    else\n      globs.push(normalizeIconPath(includeAssets));\n  }\n  if (includeManifestIcons && manifest) {\n    manifest.icons && includeIcons(manifest.icons, globs);\n    manifest.shortcuts && manifest.shortcuts.forEach((s) => {\n      s.icons && includeIcons(s.icons, globs);\n    });\n  }\n  if (globs.length > 0) {\n    let assets = await glob({\n      patterns: globs,\n      cwd: publicDir,\n      expandDirectories: false,\n      onlyFiles: true\n    });\n    if (manifestEntries.length > 0) {\n      const included = manifestEntries.map((me) => {\n        if (typeof me === \"string\")\n          return me;\n        else\n          return me.url;\n      });\n      assets = assets.filter((a) => !included.includes(a));\n    }\n    const assetsEntries = await Promise.all(assets.map((a) => {\n      return buildManifestEntry(publicDir, a);\n    }));\n    manifestEntries.push(...assetsEntries);\n  }\n  if (manifest) {\n    const cHash = crypto.createHash(\"MD5\");\n    cHash.update(generateWebManifestFile(resolvedVitePWAOptions));\n    manifestEntries.push({\n      url: manifestFilename,\n      revision: `${cHash.digest(\"hex\")}`\n    });\n  }\n  if (manifestEntries.length > 0) {\n    if (useInjectManifest)\n      injectManifest.additionalManifestEntries = manifestEntries;\n    else\n      workbox.additionalManifestEntries = manifestEntries;\n  }\n}\nfunction generateWebManifestFile(options) {\n  return `${JSON.stringify(options.manifest, null, options.minify ? 0 : 2)}\n`;\n}\n\n// src/modules.ts\nimport { promises as fs2 } from \"node:fs\";\nimport { createRequire } from \"node:module\";\nimport { dirname, resolve } from \"node:path\";\nimport { fileURLToPath } from \"node:url\";\nvar _dirname = typeof __dirname !== \"undefined\" ? __dirname : dirname(fileURLToPath(import.meta.url));\nvar require2 = createRequire(_dirname);\nasync function loadWorkboxBuild() {\n  try {\n    const workbox = await import(\"workbox-build\");\n    return workbox.default ?? workbox;\n  } catch {\n    return require2(\"workbox-build\");\n  }\n}\nasync function generateRegisterSW2(options, mode, source = \"register\") {\n  const sw = options.buildBase + options.filename;\n  const scope = options.scope;\n  const content = await fs2.readFile(resolve(_dirname, `client/${mode}/${source}.js`), \"utf-8\");\n  return content.replace(/__SW__/g, sw).replace(\"__SCOPE__\", scope).replace(\"__SW_AUTO_UPDATE__\", `${options.registerType === \"autoUpdate\"}`).replace(\"__SW_SELF_DESTROYING__\", `${options.selfDestroying}`).replace(\"__TYPE__\", `${options.devOptions.enabled ? options.devOptions.type : \"classic\"}`);\n}\nasync function generateServiceWorker(version, options, viteOptions) {\n  if (options.selfDestroying) {\n    const selfDestroyingSW = `\nself.addEventListener('install', (e) => {\n  self.skipWaiting();\n});\nself.addEventListener('activate', (e) => {\n  self.registration.unregister()\n    .then(() => self.clients.matchAll())\n    .then((clients) => {\n      clients.forEach((client) => {\n        if (client instanceof WindowClient)\n          client.navigate(client.url);\n      });\n      return Promise.resolve();\n    })\n    .then(() => {\n      self.caches.keys().then((cacheNames) => {\n        Promise.all(\n          cacheNames.map((cacheName) => {\n            return self.caches.delete(cacheName);\n          }),\n        );\n      })\n    });\n});\n    `;\n    await fs2.writeFile(options.swDest.replace(/\\\\/g, \"/\"), selfDestroyingSW, { encoding: \"utf8\" });\n    return {\n      count: 1,\n      size: selfDestroyingSW.length,\n      warnings: [],\n      filePaths: [options.filename]\n    };\n  }\n  await options.integration?.beforeBuildServiceWorker?.(options);\n  const { generateSW } = await loadWorkboxBuild();\n  const buildResult = await generateSW(options.workbox);\n  logWorkboxResult(\n    version,\n    options.throwMaximumFileSizeToCacheInBytes,\n    \"generateSW\",\n    buildResult,\n    viteOptions\n  );\n  return buildResult;\n}\nasync function generateInjectManifest(version, options, viteOptions) {\n  const { selfDestroying } = options;\n  if (selfDestroying) {\n    await generateServiceWorker(version, options, viteOptions);\n    return;\n  }\n  await import(\"./vite-build-BGK4YAIU.js\").then(({ buildSW }) => buildSW(version, options, viteOptions, loadWorkboxBuild()));\n}\n\n// src/api.ts\nasync function _generateSW({ options, version, viteConfig }) {\n  if (options.disable)\n    return;\n  if (options.strategies === \"injectManifest\")\n    await generateInjectManifest(version, options, viteConfig);\n  else\n    await generateServiceWorker(version, options, viteConfig);\n}\nfunction _generateBundle(ctx, bundle, pluginCtx) {\n  const { options, viteConfig, useImportRegister } = ctx;\n  if (options.disable || !bundle)\n    return;\n  if (options.manifest) {\n    if (!options.manifest.theme_color) {\n      console.warn([\n        \"\",\n        `${cyan(`PWA v${ctx.version}`)}`,\n        `${yellow('WARNING: \"theme_color\" is missing from the web manifest, your application will not be able to be installed')}`\n      ].join(\"\\n\"));\n    }\n    emitFile({\n      fileName: options.manifestFilename,\n      source: generateWebManifestFile(options)\n    }, bundle, pluginCtx);\n  }\n  if (options.injectRegister === \"auto\")\n    options.injectRegister = useImportRegister ? false : \"script\";\n  if ((options.injectRegister === \"script\" || options.injectRegister === \"script-defer\") && !existsSync(resolve2(viteConfig.publicDir, FILE_SW_REGISTER))) {\n    emitFile({\n      fileName: FILE_SW_REGISTER,\n      source: generateSimpleSWRegister(options, false)\n    }, bundle, pluginCtx);\n  }\n  return bundle;\n}\nfunction emitFile(asset, bundle, pluginCtx) {\n  if (pluginCtx) {\n    pluginCtx.emitFile({\n      type: \"asset\",\n      fileName: asset.fileName,\n      source: asset.source\n    });\n  } else {\n    bundle[asset.fileName] = {\n      // @ts-expect-error: for Vite 3 support, Vite 4 has removed `isAsset` property\n      isAsset: true,\n      type: \"asset\",\n      // vite 6 deprecation: replaced with names\n      name: void 0,\n      // fix vite 6 build with manifest enabled\n      names: [],\n      source: asset.source,\n      fileName: asset.fileName\n    };\n  }\n}\nfunction createAPI(ctx) {\n  return {\n    get disabled() {\n      return ctx?.options?.disable;\n    },\n    get pwaInDevEnvironment() {\n      return ctx?.devEnvironment === true;\n    },\n    webManifestData() {\n      const options = ctx?.options;\n      if (!options || options.disable || !options.manifest || ctx.devEnvironment && !ctx.options.devOptions.enabled)\n        return void 0;\n      let url = options.manifestFilename;\n      let manifest;\n      if (ctx.devEnvironment && ctx.options.devOptions.enabled === true) {\n        url = ctx.options.devOptions.webManifestUrl ?? options.manifestFilename;\n        manifest = generateWebManifest(options, true);\n      } else {\n        manifest = generateWebManifest(options, false);\n      }\n      return {\n        href: `${ctx.devEnvironment ? options.base : options.buildBase}${url}`,\n        useCredentials: ctx.options.useCredentials,\n        toLinkTag() {\n          return manifest;\n        }\n      };\n    },\n    registerSWData() {\n      const options = ctx?.options;\n      if (!options || options.disable || ctx.devEnvironment && !ctx.options.devOptions.enabled)\n        return void 0;\n      const mode = options.injectRegister;\n      if (!mode || ctx.useImportRegister)\n        return void 0;\n      let type = \"classic\";\n      let script;\n      let shouldRegisterSW = options.injectRegister === \"inline\" || options.injectRegister === \"script\" || options.injectRegister === \"script-defer\";\n      if (ctx.devEnvironment && ctx.options.devOptions.enabled === true) {\n        type = ctx.options.devOptions.type ?? \"classic\";\n        script = generateRegisterDevSW(ctx.options.base);\n        shouldRegisterSW = true;\n      } else if (shouldRegisterSW) {\n        script = generateRegisterSW(options, false);\n      }\n      const base = ctx.devEnvironment ? options.base : options.buildBase;\n      return {\n        // hint when required\n        shouldRegisterSW,\n        inline: options.injectRegister === \"inline\",\n        mode: mode === \"auto\" ? \"script\" : mode,\n        scope: options.scope,\n        inlinePath: `${base}${ctx.devEnvironment ? DEV_SW_NAME : options.filename}`,\n        registerPath: `${base}${FILE_SW_REGISTER}`,\n        type,\n        toScriptTag() {\n          return script;\n        }\n      };\n    },\n    generateBundle(bundle, pluginCtx) {\n      return _generateBundle(ctx, bundle, pluginCtx);\n    },\n    async generateSW() {\n      return await _generateSW(ctx);\n    },\n    extendManifestEntries(fn) {\n      const { options } = ctx;\n      if (options.disable)\n        return;\n      const configField = options.strategies === \"generateSW\" ? \"workbox\" : \"injectManifest\";\n      const result = fn(options[configField].additionalManifestEntries || []);\n      if (result != null)\n        options[configField].additionalManifestEntries = result;\n    },\n    pwaAssetsGenerator() {\n      return ctx.pwaAssetsGenerator;\n    }\n  };\n}\n\n// src/context.ts\nimport { readFileSync } from \"node:fs\";\nimport { dirname as dirname2, resolve as resolve3 } from \"node:path\";\nimport { fileURLToPath as fileURLToPath2 } from \"node:url\";\nfunction createContext(userOptions) {\n  const _dirname2 = typeof __dirname !== \"undefined\" ? __dirname : dirname2(fileURLToPath2(import.meta.url));\n  const { version } = JSON.parse(\n    readFileSync(resolve3(_dirname2, \"../package.json\"), \"utf-8\")\n  );\n  return {\n    version,\n    userOptions,\n    options: void 0,\n    viteConfig: void 0,\n    useImportRegister: false,\n    devEnvironment: false,\n    pwaAssetsGenerator: Promise.resolve(void 0)\n  };\n}\n\n// src/plugins/build.ts\nfunction BuildPlugin(ctx) {\n  const transformIndexHtmlHandler2 = (html) => {\n    const { options, useImportRegister } = ctx;\n    if (options.disable)\n      return html;\n    if (options.injectRegister === \"auto\")\n      options.injectRegister = useImportRegister ? null : \"script\";\n    return injectServiceWorker(html, options, false);\n  };\n  return {\n    name: \"vite-plugin-pwa:build\",\n    enforce: \"post\",\n    apply: \"build\",\n    transformIndexHtml: {\n      order: \"post\",\n      handler(html) {\n        return transformIndexHtmlHandler2(html);\n      },\n      enforce: \"post\",\n      // deprecated since Vite 4\n      transform(html) {\n        return transformIndexHtmlHandler2(html);\n      }\n    },\n    async generateBundle(_, bundle) {\n      const pwaAssetsGenerator = await ctx.pwaAssetsGenerator;\n      if (pwaAssetsGenerator)\n        pwaAssetsGenerator.injectManifestIcons();\n      return _generateBundle(ctx, bundle, this);\n    },\n    closeBundle: {\n      sequential: true,\n      order: ctx.userOptions?.integration?.closeBundleOrder,\n      async handler() {\n        if (!ctx.viteConfig.build.ssr) {\n          const pwaAssetsGenerator = await ctx.pwaAssetsGenerator;\n          if (pwaAssetsGenerator)\n            await pwaAssetsGenerator.generate();\n          if (!ctx.options.disable)\n            await _generateSW(ctx);\n        }\n      }\n    },\n    async buildEnd(error) {\n      if (error)\n        throw error;\n    }\n  };\n}\n\n// src/plugins/dev.ts\nimport { existsSync as existsSync2, promises as fs3, mkdirSync } from \"node:fs\";\nimport { basename, resolve as resolve4 } from \"node:path\";\nvar swDevOptions = {\n  swUrl: DEV_SW_NAME,\n  swDevGenerated: false,\n  registerSWGenerated: false,\n  workboxPaths: /* @__PURE__ */ new Map()\n};\nfunction DevPlugin(ctx) {\n  const transformIndexHtmlHandler2 = (html) => {\n    const { options } = ctx;\n    if (options.disable || !options.devOptions.enabled)\n      return html;\n    html = injectServiceWorker(html, options, true);\n    return html.replace(\n      \"</body>\",\n      `${generateRegisterDevSW(options.base)}\n</body>`\n    );\n  };\n  return {\n    name: \"vite-plugin-pwa:dev-sw\",\n    apply: \"serve\",\n    transformIndexHtml: {\n      order: \"post\",\n      async handler(html) {\n        return transformIndexHtmlHandler2(html);\n      },\n      enforce: \"post\",\n      // deprecated since Vite 4\n      async transform(html) {\n        return transformIndexHtmlHandler2(html);\n      }\n    },\n    configureServer(server) {\n      ctx.devEnvironment = true;\n      const { options } = ctx;\n      if (!options.disable && options.devOptions.enabled) {\n        server.ws.on(DEV_READY_NAME, createWSResponseHandler(server, ctx));\n        if (options.manifest) {\n          const name = options.devOptions.webManifestUrl ?? `${options.base}${options.manifestFilename}`;\n          server.middlewares.use(async (req, res, next) => {\n            if (req.url === name) {\n              const pwaAssetsGenerator = await ctx.pwaAssetsGenerator;\n              pwaAssetsGenerator?.injectManifestIcons();\n              if (ctx.options.manifest && !ctx.options.manifest.theme_color) {\n                console.warn([\n                  \"\",\n                  `${cyan(`PWA v${ctx.version}`)}`,\n                  `${yellow('WARNING: \"theme_color\" is missing from the web manifest, your application will not be able to be installed')}`\n                ].join(\"\\n\"));\n              }\n              res.statusCode = 200;\n              res.setHeader(\"Content-Type\", \"application/manifest+json\");\n              res.write(generateWebManifestFile(options), \"utf-8\");\n              res.end();\n            } else {\n              next();\n            }\n          });\n        }\n      }\n    },\n    resolveId(id) {\n      if (id === DEV_SW_VIRTUAL)\n        return RESOLVED_DEV_SW_VIRTUAL;\n      const { options } = ctx;\n      if (!options.disable && options.devOptions.enabled && options.strategies === \"injectManifest\" && !options.selfDestroying) {\n        let name = id.startsWith(options.base) ? id.slice(options.base.length) : id;\n        if (name.length && name[0] === \"/\")\n          name = name.slice(1);\n        return name === swDevOptions.swUrl || name === options.injectManifest.swSrc ? options.injectManifest.swSrc : void 0;\n      }\n      return void 0;\n    },\n    async load(id) {\n      if (id === RESOLVED_DEV_SW_VIRTUAL)\n        return generateSWHMR();\n      const { options, viteConfig } = ctx;\n      if (!options.disable && options.devOptions.enabled) {\n        if (options.strategies === \"injectManifest\" && !options.selfDestroying) {\n          const swSrc = normalizePath(options.injectManifest.swSrc);\n          if (id === swSrc) {\n            let content = await fs3.readFile(options.injectManifest.swSrc, \"utf-8\");\n            const resolvedIP = options.injectManifest.injectionPoint;\n            if (resolvedIP) {\n              const ip = new RegExp(resolvedIP, \"g\");\n              const navigateFallback = options.devOptions.navigateFallback;\n              if (navigateFallback)\n                content = content.replace(ip, `[{ url: '${navigateFallback}' }]`);\n              else\n                content = content.replace(ip, \"[]\");\n            }\n            return content;\n          }\n          if (swDevOptions.workboxPaths.has(id))\n            return await fs3.readFile(swDevOptions.workboxPaths.get(id), \"utf-8\");\n          return void 0;\n        }\n        if (id.endsWith(swDevOptions.swUrl)) {\n          const globDirectory = await resolveDevDistFolder(options, viteConfig);\n          if (!existsSync2(globDirectory))\n            mkdirSync(globDirectory, { recursive: true });\n          const swDest = resolve4(globDirectory, \"sw.js\");\n          if (!swDevOptions.swDevGenerated) {\n            let suppressWarnings;\n            if (options.devOptions.suppressWarnings === true) {\n              suppressWarnings = normalizePath(resolve4(globDirectory, \"suppress-warnings.js\"));\n              await fs3.writeFile(suppressWarnings, \"\", \"utf-8\");\n            }\n            const globPatterns = options.devOptions.suppressWarnings === true ? [\"suppress-warnings.js\"] : options.workbox.globPatterns;\n            const navigateFallback = options.workbox.navigateFallback;\n            const { filePaths } = await generateServiceWorker(\n              ctx.version,\n              Object.assign(\n                {},\n                options,\n                {\n                  swDest: options.selfDestroying ? swDest : options.swDest,\n                  workbox: {\n                    ...options.workbox,\n                    navigateFallbackAllowlist: options.devOptions.navigateFallbackAllowlist ?? [/^\\/$/],\n                    runtimeCaching: options.devOptions.disableRuntimeConfig ? void 0 : options.workbox.runtimeCaching,\n                    // we only include navigateFallback: add revision to remove workbox-build warning\n                    additionalManifestEntries: navigateFallback ? [{\n                      url: navigateFallback,\n                      revision: Math.random().toString(32)\n                    }] : void 0,\n                    cleanupOutdatedCaches: true,\n                    globDirectory: normalizePath(globDirectory),\n                    globPatterns,\n                    swDest: normalizePath(swDest)\n                  }\n                }\n              ),\n              viteConfig\n            );\n            filePaths.forEach((we) => {\n              const name = basename(we);\n              if (name !== \"sw.js\")\n                swDevOptions.workboxPaths.set(normalizePath(`${options.base}${name}`), we);\n            });\n            if (suppressWarnings) {\n              swDevOptions.workboxPaths.set(\n                normalizePath(`${options.base}${basename(suppressWarnings)}`),\n                suppressWarnings\n              );\n            }\n            swDevOptions.swDevGenerated = true;\n          }\n          return await fs3.readFile(swDest, \"utf-8\");\n        }\n        if (id.startsWith(options.base)) {\n          const key = normalizePath(id);\n          if (swDevOptions.workboxPaths.has(key))\n            return await fs3.readFile(swDevOptions.workboxPaths.get(key), \"utf-8\");\n        } else if (options.base !== \"/\") {\n          const key = normalizePath(`${options.base}${id.length > 0 && id[0] === \"/\" ? id.slice(1) : id}`);\n          if (swDevOptions.workboxPaths.has(key))\n            return await fs3.readFile(swDevOptions.workboxPaths.get(key), \"utf-8\");\n        }\n      }\n    }\n  };\n}\nasync function resolveDevDistFolder(options, viteConfig) {\n  return options.devOptions.resolveTempFolder ? await options.devOptions.resolveTempFolder() : resolve4(viteConfig.root, \"dev-dist\");\n}\nasync function createDevRegisterSW(options, viteConfig) {\n  if (options.injectRegister === \"script\" || options.injectRegister === \"script-defer\") {\n    const devDist = await resolveDevDistFolder(options, viteConfig);\n    if (!existsSync2(devDist))\n      mkdirSync(devDist, { recursive: true });\n    const registerSW = resolve4(devDist, FILE_SW_REGISTER);\n    if (!swDevOptions.registerSWGenerated) {\n      await fs3.writeFile(registerSW, generateSimpleSWRegister(options, true), { encoding: \"utf8\" });\n      swDevOptions.registerSWGenerated = true;\n    }\n    swDevOptions.workboxPaths.set(normalizePath(`${options.base}${FILE_SW_REGISTER}`), registerSW);\n  }\n}\nfunction createWSResponseHandler(server, ctx) {\n  return async () => {\n    const { options, useImportRegister } = ctx;\n    const { injectRegister, scope, base } = options;\n    if (!useImportRegister && injectRegister) {\n      if (injectRegister === \"auto\")\n        options.injectRegister = \"script\";\n      await createDevRegisterSW(options, ctx.viteConfig);\n      server.ws.send({\n        type: \"custom\",\n        event: DEV_REGISTER_SW_NAME,\n        data: {\n          mode: options.injectRegister,\n          scope,\n          inlinePath: `${base}${DEV_SW_NAME}`,\n          registerPath: `${base}${FILE_SW_REGISTER}`,\n          swType: options.devOptions.type\n        }\n      });\n    }\n  };\n}\n\n// src/plugins/info.ts\nfunction InfoPlugin(ctx, api) {\n  return {\n    name: \"vite-plugin-pwa:info\",\n    enforce: \"post\",\n    resolveId(id) {\n      if (id === PWA_INFO_VIRTUAL)\n        return RESOLVED_PWA_INFO_VIRTUAL;\n      return void 0;\n    },\n    load(id) {\n      if (id === RESOLVED_PWA_INFO_VIRTUAL)\n        return generatePwaInfo(ctx, api);\n    }\n  };\n}\nfunction generatePwaInfo(ctx, api) {\n  const webManifestData = api.webManifestData();\n  if (!webManifestData)\n    return \"export const pwaInfo = undefined;\";\n  const { href, useCredentials, toLinkTag } = webManifestData;\n  const registerSWData = api.registerSWData();\n  const entry = {\n    pwaInDevEnvironment: api.pwaInDevEnvironment,\n    webManifest: {\n      href,\n      useCredentials,\n      linkTag: toLinkTag()\n    }\n  };\n  if (registerSWData) {\n    const scriptTag = registerSWData.toScriptTag();\n    if (scriptTag) {\n      const { inline, mode, inlinePath, registerPath, type, scope } = registerSWData;\n      entry.registerSW = {\n        inline,\n        mode,\n        inlinePath,\n        registerPath,\n        type,\n        scope,\n        scriptTag\n      };\n    }\n  }\n  return `export const pwaInfo = ${JSON.stringify(entry)};`;\n}\n\n// src/options.ts\nimport fs4 from \"node:fs\";\nimport { extname, resolve as resolve5 } from \"node:path\";\nimport process from \"node:process\";\n\n// src/pwa-assets/options.ts\nfunction resolvePWAAssetsOptions(options) {\n  if (!options)\n    return false;\n  const {\n    disabled,\n    preset = \"minimal-2023\",\n    image = \"public/favicon.svg\",\n    htmlPreset = \"2023\",\n    overrideManifestIcons = false,\n    includeHtmlHeadLinks = true,\n    injectThemeColor = true,\n    integration\n  } = options ?? {};\n  const resolvedConfiguration = {\n    disabled: true,\n    config: false,\n    preset: false,\n    images: [image],\n    htmlPreset,\n    overrideManifestIcons,\n    includeHtmlHeadLinks,\n    injectThemeColor,\n    integration\n  };\n  if (disabled === true)\n    return resolvedConfiguration;\n  if (\"config\" in options && !!options.config) {\n    resolvedConfiguration.disabled = false;\n    resolvedConfiguration.config = options.config;\n    return resolvedConfiguration;\n  }\n  if (preset === false)\n    return resolvedConfiguration;\n  resolvedConfiguration.disabled = false;\n  resolvedConfiguration.preset = preset;\n  return resolvedConfiguration;\n}\n\n// src/options.ts\nfunction resolveSwPaths(injectManifest, root, srcDir, outDir, filename) {\n  const swSrc = resolve5(root, srcDir, filename);\n  if (injectManifest && extname(filename) === \".ts\" && fs4.existsSync(swSrc)) {\n    const useFilename = `${filename.substring(0, filename.lastIndexOf(\".\"))}.js`;\n    return {\n      swSrc,\n      swDest: resolve5(root, outDir, useFilename),\n      useFilename\n    };\n  }\n  return {\n    swSrc,\n    swDest: resolve5(root, outDir, filename)\n  };\n}\nasync function resolveOptions(ctx) {\n  const { userOptions: options, viteConfig } = ctx;\n  const root = viteConfig.root;\n  const pkg = fs4.existsSync(\"package.json\") ? JSON.parse(fs4.readFileSync(\"package.json\", \"utf-8\")) : {};\n  const {\n    // prevent tsup replacing `process.env`\n    // eslint-disable-next-line dot-notation\n    mode = process[\"env\"][\"NODE_ENV\"] || \"production\",\n    srcDir = \"public\",\n    outDir = viteConfig.build.outDir || \"dist\",\n    injectRegister = \"auto\",\n    registerType = \"prompt\",\n    filename = \"sw.js\",\n    manifestFilename = \"manifest.webmanifest\",\n    strategies = \"generateSW\",\n    minify = true,\n    base = viteConfig.base,\n    includeAssets = void 0,\n    includeManifestIcons = true,\n    useCredentials = false,\n    disable = false,\n    devOptions = { enabled: false, type: \"classic\", suppressWarnings: false },\n    selfDestroying = false,\n    integration = {},\n    buildBase,\n    pwaAssets,\n    showMaximumFileSizeToCacheInBytesWarning = false\n  } = options;\n  const basePath = resolveBasePath(base);\n  const { swSrc, swDest, useFilename } = resolveSwPaths(\n    strategies === \"injectManifest\",\n    root,\n    srcDir,\n    outDir,\n    filename\n  );\n  const outDirRoot = resolve5(root, outDir);\n  const scope = options.scope || basePath;\n  let assetsDir = slash(viteConfig.build.assetsDir ?? \"assets\");\n  if (assetsDir[assetsDir.length - 1] !== \"/\")\n    assetsDir += \"/\";\n  const dontCacheBustURLsMatching = new RegExp(`^${assetsDir.replace(/^\\.*\\//, \"\")}`);\n  const defaultWorkbox = {\n    swDest,\n    globDirectory: outDirRoot,\n    offlineGoogleAnalytics: false,\n    cleanupOutdatedCaches: true,\n    dontCacheBustURLsMatching,\n    mode,\n    navigateFallback: \"index.html\"\n  };\n  const defaultInjectManifest = {\n    swSrc,\n    swDest,\n    globDirectory: outDirRoot,\n    dontCacheBustURLsMatching,\n    injectionPoint: \"self.__WB_MANIFEST\"\n  };\n  const defaultManifest = {\n    name: pkg.name,\n    short_name: pkg.name,\n    description: pkg.description,\n    start_url: basePath,\n    display: \"standalone\",\n    background_color: \"#ffffff\",\n    theme_color: \"#42b883\",\n    lang: \"en\",\n    scope\n  };\n  const workbox = Object.assign({}, defaultWorkbox, options.workbox || {});\n  const manifest = typeof options.manifest === \"boolean\" && !options.manifest ? false : Object.assign({}, defaultManifest, options.manifest || {});\n  const {\n    vitePlugins = defaultInjectManifestVitePlugins,\n    plugins,\n    rollupOptions = {},\n    rollupFormat = \"es\",\n    target = viteConfig.build.target,\n    minify: minifySW = viteConfig.build.minify,\n    sourcemap = viteConfig.build.sourcemap,\n    enableWorkboxModulesLogs,\n    buildPlugins,\n    envOptions = {},\n    ...userInjectManifest\n  } = options.injectManifest || {};\n  const injectManifest = Object.assign({}, defaultInjectManifest, userInjectManifest);\n  if ((injectRegister === \"auto\" || injectRegister == null) && registerType === \"autoUpdate\") {\n    workbox.skipWaiting = true;\n    workbox.clientsClaim = true;\n  }\n  if (strategies === \"generateSW\" && workbox.sourcemap === void 0) {\n    const sourcemap2 = viteConfig.build?.sourcemap;\n    workbox.sourcemap = sourcemap2 === true || sourcemap2 === \"inline\" || sourcemap2 === \"hidden\";\n  }\n  if (devOptions.enabled && viteConfig.command === \"serve\") {\n    if (strategies === \"generateSW\")\n      devOptions.type = \"classic\";\n  } else {\n    devOptions.enabled = false;\n    devOptions.type = \"classic\";\n  }\n  if (manifest) {\n    if (manifest.icons) {\n      manifest.icons = manifest.icons.map((icon) => {\n        if (icon.purpose && Array.isArray(icon.purpose))\n          icon.purpose = icon.purpose.join(\" \");\n        return icon;\n      });\n    }\n    if (manifest.shortcuts) {\n      manifest.shortcuts.forEach((shortcut) => {\n        if (shortcut.icons) {\n          shortcut.icons = shortcut.icons.map((icon) => {\n            if (icon.purpose && Array.isArray(icon.purpose))\n              icon.purpose = icon.purpose.join(\" \");\n            return icon;\n          });\n        }\n      });\n    }\n  }\n  const {\n    envDir = viteConfig.envDir,\n    envPrefix = viteConfig.envPrefix\n  } = envOptions;\n  const resolvedVitePWAOptions = {\n    base: basePath,\n    mode,\n    swSrc,\n    swDest,\n    srcDir,\n    outDir,\n    injectRegister,\n    registerType,\n    filename: useFilename || filename,\n    manifestFilename,\n    strategies,\n    workbox,\n    manifest,\n    useCredentials,\n    injectManifest,\n    scope,\n    minify,\n    includeAssets,\n    includeManifestIcons,\n    disable,\n    integration,\n    devOptions,\n    rollupFormat,\n    vitePlugins,\n    buildPlugins,\n    selfDestroying,\n    buildBase: buildBase ?? basePath,\n    injectManifestRollupOptions: {\n      plugins,\n      rollupOptions,\n      format: rollupFormat\n    },\n    injectManifestBuildOptions: {\n      target,\n      minify: minifySW,\n      sourcemap,\n      enableWorkboxModulesLogs\n    },\n    injectManifestEnvOptions: {\n      envDir,\n      envPrefix\n    },\n    pwaAssets: resolvePWAAssetsOptions(pwaAssets),\n    throwMaximumFileSizeToCacheInBytes: !showMaximumFileSizeToCacheInBytesWarning\n  };\n  const calculateHash = !resolvedVitePWAOptions.disable && (resolvedVitePWAOptions.manifest || resolvedVitePWAOptions.includeAssets) && (viteConfig.command === \"build\" || resolvedVitePWAOptions.devOptions.enabled);\n  if (calculateHash)\n    await configureStaticAssets(resolvedVitePWAOptions, viteConfig);\n  return resolvedVitePWAOptions;\n}\n\n// src/plugins/main.ts\nfunction MainPlugin(ctx, api) {\n  return {\n    name: \"vite-plugin-pwa\",\n    enforce: \"pre\",\n    config() {\n      return {\n        ssr: {\n          // TODO: remove until workbox-window support native ESM\n          noExternal: [\"workbox-window\"]\n        }\n      };\n    },\n    async configResolved(config) {\n      ctx.useImportRegister = false;\n      ctx.viteConfig = config;\n      ctx.userOptions?.integration?.configureOptions?.(config, ctx.userOptions);\n      ctx.options = await resolveOptions(ctx);\n      if (ctx.options.pwaAssets && !ctx.options.pwaAssets.disabled) {\n        ctx.pwaAssetsGenerator = import(\"./generator-QYK42GLH.js\").then(({ loadInstructions }) => loadInstructions(ctx)).catch((e) => {\n          console.error([\n            \"\",\n            cyan(`PWA v${ctx.version}`),\n            yellow(\"WARNING: you must install the following dev dependencies to use the PWA assets generator:\"),\n            yellow('- \"@vite-pwa/assets-generator\"'),\n            yellow('- \"sharp\" (should be installed when installing @vite-pwa/assets-generator)'),\n            yellow('- \"sharp-ico\" (should be installed when installing @vite-pwa/assets-generator)')\n          ].join(\"\\n\"), e);\n          return Promise.resolve(void 0);\n        });\n      }\n    },\n    resolveId(id) {\n      return VIRTUAL_MODULES.includes(id) ? VIRTUAL_MODULES_RESOLVE_PREFIX + id : void 0;\n    },\n    load(id) {\n      if (id.startsWith(VIRTUAL_MODULES_RESOLVE_PREFIX))\n        id = id.slice(VIRTUAL_MODULES_RESOLVE_PREFIX.length);\n      else\n        return;\n      if (VIRTUAL_MODULES.includes(id)) {\n        ctx.useImportRegister = true;\n        if (ctx.viteConfig.command === \"serve\" && ctx.options.devOptions.enabled) {\n          return generateRegisterSW2(\n            { ...ctx.options, filename: swDevOptions.swUrl },\n            \"build\",\n            VIRTUAL_MODULES_MAP[id]\n          );\n        } else {\n          return generateRegisterSW2(\n            ctx.options,\n            !ctx.options.disable && ctx.viteConfig.command === \"build\" ? \"build\" : \"dev\",\n            VIRTUAL_MODULES_MAP[id]\n          );\n        }\n      }\n    },\n    api\n  };\n}\n\n// src/plugins/pwa-assets.ts\nfunction AssetsPlugin(ctx) {\n  return {\n    name: \"vite-plugin-pwa:pwa-assets\",\n    enforce: \"post\",\n    transformIndexHtml: {\n      order: \"post\",\n      async handler(html) {\n        return await transformIndexHtmlHandler(html, ctx);\n      },\n      enforce: \"post\",\n      // deprecated since Vite 4\n      async transform(html) {\n        return await transformIndexHtmlHandler(html, ctx);\n      }\n    },\n    resolveId(id) {\n      switch (true) {\n        case id === PWA_ASSETS_HEAD_VIRTUAL:\n          return RESOLVED_PWA_ASSETS_HEAD_VIRTUAL;\n        case id === PWA_ASSETS_ICONS_VIRTUAL:\n          return RESOLVED_PWA_ASSETS_ICONS_VIRTUAL;\n        default:\n          return void 0;\n      }\n    },\n    async load(id) {\n      if (id === RESOLVED_PWA_ASSETS_HEAD_VIRTUAL) {\n        const pwaAssetsGenerator = await ctx.pwaAssetsGenerator;\n        const head = pwaAssetsGenerator?.resolveHtmlAssets() ?? { links: [], themeColor: void 0 };\n        return `export const pwaAssetsHead = ${JSON.stringify(head)}`;\n      }\n      if (id === RESOLVED_PWA_ASSETS_ICONS_VIRTUAL) {\n        const pwaAssetsGenerator = await ctx.pwaAssetsGenerator;\n        const icons = extractIcons(pwaAssetsGenerator?.instructions());\n        return `export const pwaAssetsIcons = ${JSON.stringify(icons)}`;\n      }\n    },\n    async handleHotUpdate({ file, server }) {\n      const pwaAssetsGenerator = await ctx.pwaAssetsGenerator;\n      if (await pwaAssetsGenerator?.checkHotUpdate(file)) {\n        const modules = [];\n        const head = server.moduleGraph.getModuleById(RESOLVED_PWA_ASSETS_HEAD_VIRTUAL);\n        head && modules.push(head);\n        const icons = server.moduleGraph.getModuleById(RESOLVED_PWA_ASSETS_ICONS_VIRTUAL);\n        icons && modules.push(icons);\n        if (modules)\n          return modules;\n        server.ws.send({ type: \"full-reload\" });\n        return [];\n      }\n    },\n    configureServer(server) {\n      server.ws.on(DEV_READY_NAME, createWSResponseHandler2(ctx, server));\n      server.middlewares.use(async (req, res, next) => {\n        const url = req.url;\n        if (!url)\n          return next();\n        if (!/\\.(?:ico|png|svg|webp)$/.test(url))\n          return next();\n        const pwaAssetsGenerator = await ctx.pwaAssetsGenerator;\n        if (!pwaAssetsGenerator)\n          return next();\n        const icon = await pwaAssetsGenerator.findIconAsset(url);\n        if (!icon)\n          return next();\n        if (icon.age > 0) {\n          const ifModifiedSince = req.headers[\"if-modified-since\"] ?? req.headers[\"If-Modified-Since\"];\n          const useIfModifiedSince = ifModifiedSince ? Array.isArray(ifModifiedSince) ? ifModifiedSince[0] : ifModifiedSince : void 0;\n          if (useIfModifiedSince && new Date(icon.lastModified).getTime() / 1e3 >= new Date(useIfModifiedSince).getTime() / 1e3) {\n            res.statusCode = 304;\n            res.end();\n            return;\n          }\n        }\n        const buffer = await icon.buffer;\n        res.setHeader(\"Age\", icon.age / 1e3);\n        res.setHeader(\"Content-Type\", icon.mimeType);\n        res.setHeader(\"Content-Length\", buffer.length);\n        res.setHeader(\"Last-Modified\", new Date(icon.lastModified).toUTCString());\n        res.statusCode = 200;\n        res.end(buffer);\n      });\n    }\n  };\n}\nasync function transformIndexHtmlHandler(html, ctx) {\n  if (ctx.devEnvironment && ctx.options.devOptions.enabled)\n    return html;\n  const pwaAssetsGenerator = await ctx.pwaAssetsGenerator;\n  if (!pwaAssetsGenerator)\n    return html;\n  return pwaAssetsGenerator.transformIndexHtml(html);\n}\nfunction createWSResponseHandler2(ctx, server) {\n  return async () => {\n    const pwaAssetsGenerator = await ctx.pwaAssetsGenerator;\n    if (pwaAssetsGenerator) {\n      const data = pwaAssetsGenerator.resolveHtmlAssets();\n      server.ws.send({\n        type: \"custom\",\n        event: DEV_PWA_ASSETS_NAME,\n        data\n      });\n    }\n  };\n}\n\n// src/cache.ts\nvar cachePreset = [\n  {\n    urlPattern: /^https:\\/\\/fonts\\.(?:googleapis|gstatic)\\.com\\/.*/i,\n    handler: \"CacheFirst\",\n    options: {\n      cacheName: \"google-fonts\",\n      expiration: {\n        maxEntries: 4,\n        maxAgeSeconds: 365 * 24 * 60 * 60\n        // 365 days\n      }\n    }\n  },\n  {\n    urlPattern: /\\.(?:eot|otf|ttc|ttf|woff|woff2|font.css)$/i,\n    handler: \"StaleWhileRevalidate\",\n    options: {\n      cacheName: \"static-font-assets\",\n      expiration: {\n        maxEntries: 4,\n        maxAgeSeconds: 7 * 24 * 60 * 60\n        // 7 days\n      }\n    }\n  },\n  {\n    urlPattern: /\\.(?:jpg|jpeg|gif|png|svg|ico|webp)$/i,\n    handler: \"StaleWhileRevalidate\",\n    options: {\n      cacheName: \"static-image-assets\",\n      expiration: {\n        maxEntries: 64,\n        maxAgeSeconds: 24 * 60 * 60\n        // 24 hours\n      }\n    }\n  },\n  {\n    urlPattern: /\\.js$/i,\n    handler: \"StaleWhileRevalidate\",\n    options: {\n      cacheName: \"static-js-assets\",\n      expiration: {\n        maxEntries: 32,\n        maxAgeSeconds: 24 * 60 * 60\n        // 24 hours\n      }\n    }\n  },\n  {\n    urlPattern: /\\.(?:css|less)$/i,\n    handler: \"StaleWhileRevalidate\",\n    options: {\n      cacheName: \"static-style-assets\",\n      expiration: {\n        maxEntries: 32,\n        maxAgeSeconds: 24 * 60 * 60\n        // 24 hours\n      }\n    }\n  },\n  {\n    urlPattern: /\\.(?:json|xml|csv)$/i,\n    handler: \"NetworkFirst\",\n    options: {\n      cacheName: \"static-data-assets\",\n      expiration: {\n        maxEntries: 32,\n        maxAgeSeconds: 24 * 60 * 60\n        // 24 hours\n      }\n    }\n  },\n  {\n    urlPattern: /\\/api\\/.*$/i,\n    handler: \"NetworkFirst\",\n    method: \"GET\",\n    options: {\n      cacheName: \"apis\",\n      expiration: {\n        maxEntries: 16,\n        maxAgeSeconds: 24 * 60 * 60\n        // 24 hours\n      },\n      networkTimeoutSeconds: 10\n      // fall back to cache if api does not response within 10 seconds\n    }\n  },\n  {\n    // eslint-disable-next-line regexp/no-useless-flag\n    urlPattern: /.*/i,\n    handler: \"NetworkFirst\",\n    options: {\n      cacheName: \"others\",\n      expiration: {\n        maxEntries: 32,\n        maxAgeSeconds: 24 * 60 * 60\n        // 24 hours\n      },\n      networkTimeoutSeconds: 10\n    }\n  }\n];\n\n// src/index.ts\nfunction VitePWA(userOptions = {}) {\n  const ctx = createContext(userOptions);\n  const api = createAPI(ctx);\n  return [\n    MainPlugin(ctx, api),\n    InfoPlugin(ctx, api),\n    BuildPlugin(ctx),\n    DevPlugin(ctx),\n    AssetsPlugin(ctx)\n  ];\n}\nexport {\n  VitePWA,\n  cachePreset,\n  defaultInjectManifestVitePlugins\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,qBAA2B;AAC3B,uBAAoC;AAGpC,yBAAmB;AACnB,IAAAA,kBAAe;AACf,IAAAC,oBAAqC;AA0GrC,IAAAC,kBAAgC;AAChC,yBAA8B;AAC9B,IAAAC,oBAAiC;AACjC,sBAA8B;AAoN9B,IAAAD,kBAA6B;AAC7B,IAAAC,oBAAyD;AACzD,IAAAC,mBAAgD;AAqEhD,IAAAF,kBAAsE;AACtE,IAAAC,oBAA8C;AA4P9C,IAAAD,kBAAgB;AAChB,IAAAC,oBAA6C;AAC7C,0BAAoB;AAroBpB,SAAS,mBAAmB,WAAW,KAAK;AAC1C,SAAO,IAAI,QAAQ,CAAC,UAAU,WAAW;AACvC,UAAM,QAAQ,mBAAAE,QAAO,WAAW,KAAK;AACrC,UAAM,SAAS,gBAAAC,QAAG,qBAAiB,kBAAAC,SAAU,WAAW,GAAG,CAAC;AAC5D,WAAO,GAAG,SAAS,CAAC,QAAQ;AAC1B,aAAO,GAAG;AAAA,IACZ,CAAC;AACD,WAAO,GAAG,QAAQ,CAAC,UAAU;AAC3B,YAAM,OAAO,KAAK;AAAA,IACpB,CAAC;AACD,WAAO,GAAG,OAAO,MAAM;AACrB,aAAO,SAAS;AAAA,QACd;AAAA,QACA,UAAU,GAAG,MAAM,OAAO,KAAK,CAAC;AAAA,MAClC,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH;AACA,SAAS,gCAAgC,mBAAmB,gBAAgB,SAAS;AACnF,SAAO,oBAAoB,eAAe,6BAA6B,CAAC,IAAI,QAAQ,6BAA6B,CAAC;AACpH;AACA,SAAS,kBAAkB,MAAM;AAC/B,SAAO,KAAK,WAAW,GAAG,IAAI,KAAK,UAAU,CAAC,IAAI;AACpD;AACA,SAAS,aAAa,OAAO,OAAO;AAClC,SAAO,KAAK,KAAK,EAAE,QAAQ,CAAC,QAAQ;AAClC,UAAM,OAAO,MAAM,GAAG;AACtB,UAAM,MAAM,kBAAkB,KAAK,GAAG;AACtC,QAAI,CAAC,MAAM,SAAS,GAAG;AACrB,YAAM,KAAK,GAAG;AAAA,EAClB,CAAC;AACH;AACA,eAAe,sBAAsB,wBAAwB,YAAY;AACvE,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,oBAAoB,eAAe;AACzC,QAAM,EAAE,UAAU,IAAI;AACtB,QAAM,QAAQ,CAAC;AACf,QAAM,kBAAkB;AAAA,IACtB;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,MAAI,eAAe;AACjB,QAAI,MAAM,QAAQ,aAAa;AAC7B,YAAM,KAAK,GAAG,cAAc,IAAI,iBAAiB,CAAC;AAAA;AAElD,YAAM,KAAK,kBAAkB,aAAa,CAAC;AAAA,EAC/C;AACA,MAAI,wBAAwB,UAAU;AACpC,aAAS,SAAS,aAAa,SAAS,OAAO,KAAK;AACpD,aAAS,aAAa,SAAS,UAAU,QAAQ,CAAC,MAAM;AACtD,QAAE,SAAS,aAAa,EAAE,OAAO,KAAK;AAAA,IACxC,CAAC;AAAA,EACH;AACA,MAAI,MAAM,SAAS,GAAG;AACpB,QAAI,SAAS,MAAM,KAAK;AAAA,MACtB,UAAU;AAAA,MACV,KAAK;AAAA,MACL,mBAAmB;AAAA,MACnB,WAAW;AAAA,IACb,CAAC;AACD,QAAI,gBAAgB,SAAS,GAAG;AAC9B,YAAM,WAAW,gBAAgB,IAAI,CAAC,OAAO;AAC3C,YAAI,OAAO,OAAO;AAChB,iBAAO;AAAA;AAEP,iBAAO,GAAG;AAAA,MACd,CAAC;AACD,eAAS,OAAO,OAAO,CAAC,MAAM,CAAC,SAAS,SAAS,CAAC,CAAC;AAAA,IACrD;AACA,UAAM,gBAAgB,MAAM,QAAQ,IAAI,OAAO,IAAI,CAAC,MAAM;AACxD,aAAO,mBAAmB,WAAW,CAAC;AAAA,IACxC,CAAC,CAAC;AACF,oBAAgB,KAAK,GAAG,aAAa;AAAA,EACvC;AACA,MAAI,UAAU;AACZ,UAAM,QAAQ,mBAAAF,QAAO,WAAW,KAAK;AACrC,UAAM,OAAO,wBAAwB,sBAAsB,CAAC;AAC5D,oBAAgB,KAAK;AAAA,MACnB,KAAK;AAAA,MACL,UAAU,GAAG,MAAM,OAAO,KAAK,CAAC;AAAA,IAClC,CAAC;AAAA,EACH;AACA,MAAI,gBAAgB,SAAS,GAAG;AAC9B,QAAI;AACF,qBAAe,4BAA4B;AAAA;AAE3C,cAAQ,4BAA4B;AAAA,EACxC;AACF;AACA,SAAS,wBAAwB,SAAS;AACxC,SAAO,GAAG,KAAK,UAAU,QAAQ,UAAU,MAAM,QAAQ,SAAS,IAAI,CAAC,CAAC;AAAA;AAE1E;AAOA,IAAI,WAAW,OAAO,cAAc,cAAc,gBAAY,+BAAQ,+BAAc,YAAY,GAAG,CAAC;AACpG,IAAI,eAAW,kCAAc,QAAQ;AACrC,eAAe,mBAAmB;AAChC,MAAI;AACF,UAAM,UAAU,MAAM,OAAO,qBAAe;AAC5C,WAAO,QAAQ,WAAW;AAAA,EAC5B,QAAQ;AACN,WAAO,SAAS,eAAe;AAAA,EACjC;AACF;AACA,eAAe,oBAAoB,SAAS,MAAM,SAAS,YAAY;AACrE,QAAM,KAAK,QAAQ,YAAY,QAAQ;AACvC,QAAM,QAAQ,QAAQ;AACtB,QAAM,UAAU,MAAM,gBAAAG,SAAI,aAAS,2BAAQ,UAAU,UAAU,IAAI,IAAI,MAAM,KAAK,GAAG,OAAO;AAC5F,SAAO,QAAQ,QAAQ,WAAW,EAAE,EAAE,QAAQ,aAAa,KAAK,EAAE,QAAQ,sBAAsB,GAAG,QAAQ,iBAAiB,YAAY,EAAE,EAAE,QAAQ,0BAA0B,GAAG,QAAQ,cAAc,EAAE,EAAE,QAAQ,YAAY,GAAG,QAAQ,WAAW,UAAU,QAAQ,WAAW,OAAO,SAAS,EAAE;AACtS;AACA,eAAe,sBAAsB,SAAS,SAAS,aAAa;AA1KpE;AA2KE,MAAI,QAAQ,gBAAgB;AAC1B,UAAM,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBzB,UAAM,gBAAAA,SAAI,UAAU,QAAQ,OAAO,QAAQ,OAAO,GAAG,GAAG,kBAAkB,EAAE,UAAU,OAAO,CAAC;AAC9F,WAAO;AAAA,MACL,OAAO;AAAA,MACP,MAAM,iBAAiB;AAAA,MACvB,UAAU,CAAC;AAAA,MACX,WAAW,CAAC,QAAQ,QAAQ;AAAA,IAC9B;AAAA,EACF;AACA,UAAM,mBAAQ,gBAAR,mBAAqB,6BAArB,4BAAgD;AACtD,QAAM,EAAE,WAAW,IAAI,MAAM,iBAAiB;AAC9C,QAAM,cAAc,MAAM,WAAW,QAAQ,OAAO;AACpD;AAAA,IACE;AAAA,IACA,QAAQ;AAAA,IACR;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,SAAO;AACT;AACA,eAAe,uBAAuB,SAAS,SAAS,aAAa;AACnE,QAAM,EAAE,eAAe,IAAI;AAC3B,MAAI,gBAAgB;AAClB,UAAM,sBAAsB,SAAS,SAAS,WAAW;AACzD;AAAA,EACF;AACA,QAAM,OAAO,mCAA0B,EAAE,KAAK,CAAC,EAAE,QAAQ,MAAM,QAAQ,SAAS,SAAS,aAAa,iBAAiB,CAAC,CAAC;AAC3H;AAGA,eAAe,YAAY,EAAE,SAAS,SAAS,WAAW,GAAG;AAC3D,MAAI,QAAQ;AACV;AACF,MAAI,QAAQ,eAAe;AACzB,UAAM,uBAAuB,SAAS,SAAS,UAAU;AAAA;AAEzD,UAAM,sBAAsB,SAAS,SAAS,UAAU;AAC5D;AACA,SAAS,gBAAgB,KAAK,QAAQ,WAAW;AAC/C,QAAM,EAAE,SAAS,YAAY,kBAAkB,IAAI;AACnD,MAAI,QAAQ,WAAW,CAAC;AACtB;AACF,MAAI,QAAQ,UAAU;AACpB,QAAI,CAAC,QAAQ,SAAS,aAAa;AACjC,cAAQ,KAAK;AAAA,QACX;AAAA,QACA,GAAG,KAAK,QAAQ,IAAI,OAAO,EAAE,CAAC;AAAA,QAC9B,GAAG,OAAO,4GAA4G,CAAC;AAAA,MACzH,EAAE,KAAK,IAAI,CAAC;AAAA,IACd;AACA,aAAS;AAAA,MACP,UAAU,QAAQ;AAAA,MAClB,QAAQ,wBAAwB,OAAO;AAAA,IACzC,GAAG,QAAQ,SAAS;AAAA,EACtB;AACA,MAAI,QAAQ,mBAAmB;AAC7B,YAAQ,iBAAiB,oBAAoB,QAAQ;AACvD,OAAK,QAAQ,mBAAmB,YAAY,QAAQ,mBAAmB,mBAAmB,KAAC,+BAAW,iBAAAC,SAAS,WAAW,WAAW,gBAAgB,CAAC,GAAG;AACvJ,aAAS;AAAA,MACP,UAAU;AAAA,MACV,QAAQ,yBAAyB,SAAS,KAAK;AAAA,IACjD,GAAG,QAAQ,SAAS;AAAA,EACtB;AACA,SAAO;AACT;AACA,SAAS,SAAS,OAAO,QAAQ,WAAW;AAC1C,MAAI,WAAW;AACb,cAAU,SAAS;AAAA,MACjB,MAAM;AAAA,MACN,UAAU,MAAM;AAAA,MAChB,QAAQ,MAAM;AAAA,IAChB,CAAC;AAAA,EACH,OAAO;AACL,WAAO,MAAM,QAAQ,IAAI;AAAA;AAAA,MAEvB,SAAS;AAAA,MACT,MAAM;AAAA;AAAA,MAEN,MAAM;AAAA;AAAA,MAEN,OAAO,CAAC;AAAA,MACR,QAAQ,MAAM;AAAA,MACd,UAAU,MAAM;AAAA,IAClB;AAAA,EACF;AACF;AACA,SAAS,UAAU,KAAK;AACtB,SAAO;AAAA,IACL,IAAI,WAAW;AA7RnB;AA8RM,cAAO,gCAAK,YAAL,mBAAc;AAAA,IACvB;AAAA,IACA,IAAI,sBAAsB;AACxB,cAAO,2BAAK,oBAAmB;AAAA,IACjC;AAAA,IACA,kBAAkB;AAChB,YAAM,UAAU,2BAAK;AACrB,UAAI,CAAC,WAAW,QAAQ,WAAW,CAAC,QAAQ,YAAY,IAAI,kBAAkB,CAAC,IAAI,QAAQ,WAAW;AACpG,eAAO;AACT,UAAI,MAAM,QAAQ;AAClB,UAAI;AACJ,UAAI,IAAI,kBAAkB,IAAI,QAAQ,WAAW,YAAY,MAAM;AACjE,cAAM,IAAI,QAAQ,WAAW,kBAAkB,QAAQ;AACvD,mBAAW,oBAAoB,SAAS,IAAI;AAAA,MAC9C,OAAO;AACL,mBAAW,oBAAoB,SAAS,KAAK;AAAA,MAC/C;AACA,aAAO;AAAA,QACL,MAAM,GAAG,IAAI,iBAAiB,QAAQ,OAAO,QAAQ,SAAS,GAAG,GAAG;AAAA,QACpE,gBAAgB,IAAI,QAAQ;AAAA,QAC5B,YAAY;AACV,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA,IACA,iBAAiB;AACf,YAAM,UAAU,2BAAK;AACrB,UAAI,CAAC,WAAW,QAAQ,WAAW,IAAI,kBAAkB,CAAC,IAAI,QAAQ,WAAW;AAC/E,eAAO;AACT,YAAM,OAAO,QAAQ;AACrB,UAAI,CAAC,QAAQ,IAAI;AACf,eAAO;AACT,UAAI,OAAO;AACX,UAAI;AACJ,UAAI,mBAAmB,QAAQ,mBAAmB,YAAY,QAAQ,mBAAmB,YAAY,QAAQ,mBAAmB;AAChI,UAAI,IAAI,kBAAkB,IAAI,QAAQ,WAAW,YAAY,MAAM;AACjE,eAAO,IAAI,QAAQ,WAAW,QAAQ;AACtC,iBAAS,sBAAsB,IAAI,QAAQ,IAAI;AAC/C,2BAAmB;AAAA,MACrB,WAAW,kBAAkB;AAC3B,iBAAS,mBAAmB,SAAS,KAAK;AAAA,MAC5C;AACA,YAAM,OAAO,IAAI,iBAAiB,QAAQ,OAAO,QAAQ;AACzD,aAAO;AAAA;AAAA,QAEL;AAAA,QACA,QAAQ,QAAQ,mBAAmB;AAAA,QACnC,MAAM,SAAS,SAAS,WAAW;AAAA,QACnC,OAAO,QAAQ;AAAA,QACf,YAAY,GAAG,IAAI,GAAG,IAAI,iBAAiB,cAAc,QAAQ,QAAQ;AAAA,QACzE,cAAc,GAAG,IAAI,GAAG,gBAAgB;AAAA,QACxC;AAAA,QACA,cAAc;AACZ,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA,IACA,eAAe,QAAQ,WAAW;AAChC,aAAO,gBAAgB,KAAK,QAAQ,SAAS;AAAA,IAC/C;AAAA,IACA,MAAM,aAAa;AACjB,aAAO,MAAM,YAAY,GAAG;AAAA,IAC9B;AAAA,IACA,sBAAsB,IAAI;AACxB,YAAM,EAAE,QAAQ,IAAI;AACpB,UAAI,QAAQ;AACV;AACF,YAAM,cAAc,QAAQ,eAAe,eAAe,YAAY;AACtE,YAAM,SAAS,GAAG,QAAQ,WAAW,EAAE,6BAA6B,CAAC,CAAC;AACtE,UAAI,UAAU;AACZ,gBAAQ,WAAW,EAAE,4BAA4B;AAAA,IACrD;AAAA,IACA,qBAAqB;AACnB,aAAO,IAAI;AAAA,IACb;AAAA,EACF;AACF;AAMA,SAAS,cAAc,aAAa;AAClC,QAAM,YAAY,OAAO,cAAc,cAAc,gBAAY,kBAAAC,aAAS,iBAAAC,eAAe,YAAY,GAAG,CAAC;AACzG,QAAM,EAAE,QAAQ,IAAI,KAAK;AAAA,QACvB,kCAAa,kBAAAC,SAAS,WAAW,iBAAiB,GAAG,OAAO;AAAA,EAC9D;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,mBAAmB;AAAA,IACnB,gBAAgB;AAAA,IAChB,oBAAoB,QAAQ,QAAQ,MAAM;AAAA,EAC5C;AACF;AAGA,SAAS,YAAY,KAAK;AAjY1B;AAkYE,QAAM,6BAA6B,CAAC,SAAS;AAC3C,UAAM,EAAE,SAAS,kBAAkB,IAAI;AACvC,QAAI,QAAQ;AACV,aAAO;AACT,QAAI,QAAQ,mBAAmB;AAC7B,cAAQ,iBAAiB,oBAAoB,OAAO;AACtD,WAAO,oBAAoB,MAAM,SAAS,KAAK;AAAA,EACjD;AACA,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,IACT,OAAO;AAAA,IACP,oBAAoB;AAAA,MAClB,OAAO;AAAA,MACP,QAAQ,MAAM;AACZ,eAAO,2BAA2B,IAAI;AAAA,MACxC;AAAA,MACA,SAAS;AAAA;AAAA,MAET,UAAU,MAAM;AACd,eAAO,2BAA2B,IAAI;AAAA,MACxC;AAAA,IACF;AAAA,IACA,MAAM,eAAe,GAAG,QAAQ;AAC9B,YAAM,qBAAqB,MAAM,IAAI;AACrC,UAAI;AACF,2BAAmB,oBAAoB;AACzC,aAAO,gBAAgB,KAAK,QAAQ,IAAI;AAAA,IAC1C;AAAA,IACA,aAAa;AAAA,MACX,YAAY;AAAA,MACZ,QAAO,eAAI,gBAAJ,mBAAiB,gBAAjB,mBAA8B;AAAA,MACrC,MAAM,UAAU;AACd,YAAI,CAAC,IAAI,WAAW,MAAM,KAAK;AAC7B,gBAAM,qBAAqB,MAAM,IAAI;AACrC,cAAI;AACF,kBAAM,mBAAmB,SAAS;AACpC,cAAI,CAAC,IAAI,QAAQ;AACf,kBAAM,YAAY,GAAG;AAAA,QACzB;AAAA,MACF;AAAA,IACF;AAAA,IACA,MAAM,SAAS,OAAO;AACpB,UAAI;AACF,cAAM;AAAA,IACV;AAAA,EACF;AACF;AAKA,IAAI,eAAe;AAAA,EACjB,OAAO;AAAA,EACP,gBAAgB;AAAA,EAChB,qBAAqB;AAAA,EACrB,cAA8B,oBAAI,IAAI;AACxC;AACA,SAAS,UAAU,KAAK;AACtB,QAAM,6BAA6B,CAAC,SAAS;AAC3C,UAAM,EAAE,QAAQ,IAAI;AACpB,QAAI,QAAQ,WAAW,CAAC,QAAQ,WAAW;AACzC,aAAO;AACT,WAAO,oBAAoB,MAAM,SAAS,IAAI;AAC9C,WAAO,KAAK;AAAA,MACV;AAAA,MACA,GAAG,sBAAsB,QAAQ,IAAI,CAAC;AAAA;AAAA,IAExC;AAAA,EACF;AACA,SAAO;AAAA,IACL,MAAM;AAAA,IACN,OAAO;AAAA,IACP,oBAAoB;AAAA,MAClB,OAAO;AAAA,MACP,MAAM,QAAQ,MAAM;AAClB,eAAO,2BAA2B,IAAI;AAAA,MACxC;AAAA,MACA,SAAS;AAAA;AAAA,MAET,MAAM,UAAU,MAAM;AACpB,eAAO,2BAA2B,IAAI;AAAA,MACxC;AAAA,IACF;AAAA,IACA,gBAAgB,QAAQ;AACtB,UAAI,iBAAiB;AACrB,YAAM,EAAE,QAAQ,IAAI;AACpB,UAAI,CAAC,QAAQ,WAAW,QAAQ,WAAW,SAAS;AAClD,eAAO,GAAG,GAAG,gBAAgB,wBAAwB,QAAQ,GAAG,CAAC;AACjE,YAAI,QAAQ,UAAU;AACpB,gBAAM,OAAO,QAAQ,WAAW,kBAAkB,GAAG,QAAQ,IAAI,GAAG,QAAQ,gBAAgB;AAC5F,iBAAO,YAAY,IAAI,OAAO,KAAK,KAAK,SAAS;AAC/C,gBAAI,IAAI,QAAQ,MAAM;AACpB,oBAAM,qBAAqB,MAAM,IAAI;AACrC,uEAAoB;AACpB,kBAAI,IAAI,QAAQ,YAAY,CAAC,IAAI,QAAQ,SAAS,aAAa;AAC7D,wBAAQ,KAAK;AAAA,kBACX;AAAA,kBACA,GAAG,KAAK,QAAQ,IAAI,OAAO,EAAE,CAAC;AAAA,kBAC9B,GAAG,OAAO,4GAA4G,CAAC;AAAA,gBACzH,EAAE,KAAK,IAAI,CAAC;AAAA,cACd;AACA,kBAAI,aAAa;AACjB,kBAAI,UAAU,gBAAgB,2BAA2B;AACzD,kBAAI,MAAM,wBAAwB,OAAO,GAAG,OAAO;AACnD,kBAAI,IAAI;AAAA,YACV,OAAO;AACL,mBAAK;AAAA,YACP;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF;AAAA,IACF;AAAA,IACA,UAAU,IAAI;AACZ,UAAI,OAAO;AACT,eAAO;AACT,YAAM,EAAE,QAAQ,IAAI;AACpB,UAAI,CAAC,QAAQ,WAAW,QAAQ,WAAW,WAAW,QAAQ,eAAe,oBAAoB,CAAC,QAAQ,gBAAgB;AACxH,YAAI,OAAO,GAAG,WAAW,QAAQ,IAAI,IAAI,GAAG,MAAM,QAAQ,KAAK,MAAM,IAAI;AACzE,YAAI,KAAK,UAAU,KAAK,CAAC,MAAM;AAC7B,iBAAO,KAAK,MAAM,CAAC;AACrB,eAAO,SAAS,aAAa,SAAS,SAAS,QAAQ,eAAe,QAAQ,QAAQ,eAAe,QAAQ;AAAA,MAC/G;AACA,aAAO;AAAA,IACT;AAAA,IACA,MAAM,KAAK,IAAI;AACb,UAAI,OAAO;AACT,eAAO,cAAc;AACvB,YAAM,EAAE,SAAS,WAAW,IAAI;AAChC,UAAI,CAAC,QAAQ,WAAW,QAAQ,WAAW,SAAS;AAClD,YAAI,QAAQ,eAAe,oBAAoB,CAAC,QAAQ,gBAAgB;AACtE,gBAAM,QAAQ,cAAc,QAAQ,eAAe,KAAK;AACxD,cAAI,OAAO,OAAO;AAChB,gBAAI,UAAU,MAAM,gBAAAC,SAAI,SAAS,QAAQ,eAAe,OAAO,OAAO;AACtE,kBAAM,aAAa,QAAQ,eAAe;AAC1C,gBAAI,YAAY;AACd,oBAAM,KAAK,IAAI,OAAO,YAAY,GAAG;AACrC,oBAAM,mBAAmB,QAAQ,WAAW;AAC5C,kBAAI;AACF,0BAAU,QAAQ,QAAQ,IAAI,YAAY,gBAAgB,MAAM;AAAA;AAEhE,0BAAU,QAAQ,QAAQ,IAAI,IAAI;AAAA,YACtC;AACA,mBAAO;AAAA,UACT;AACA,cAAI,aAAa,aAAa,IAAI,EAAE;AAClC,mBAAO,MAAM,gBAAAA,SAAI,SAAS,aAAa,aAAa,IAAI,EAAE,GAAG,OAAO;AACtE,iBAAO;AAAA,QACT;AACA,YAAI,GAAG,SAAS,aAAa,KAAK,GAAG;AACnC,gBAAM,gBAAgB,MAAM,qBAAqB,SAAS,UAAU;AACpE,cAAI,KAAC,gBAAAC,YAAY,aAAa;AAC5B,2CAAU,eAAe,EAAE,WAAW,KAAK,CAAC;AAC9C,gBAAM,aAAS,kBAAAC,SAAS,eAAe,OAAO;AAC9C,cAAI,CAAC,aAAa,gBAAgB;AAChC,gBAAI;AACJ,gBAAI,QAAQ,WAAW,qBAAqB,MAAM;AAChD,iCAAmB,kBAAc,kBAAAA,SAAS,eAAe,sBAAsB,CAAC;AAChF,oBAAM,gBAAAF,SAAI,UAAU,kBAAkB,IAAI,OAAO;AAAA,YACnD;AACA,kBAAM,eAAe,QAAQ,WAAW,qBAAqB,OAAO,CAAC,sBAAsB,IAAI,QAAQ,QAAQ;AAC/G,kBAAM,mBAAmB,QAAQ,QAAQ;AACzC,kBAAM,EAAE,UAAU,IAAI,MAAM;AAAA,cAC1B,IAAI;AAAA,cACJ,OAAO;AAAA,gBACL,CAAC;AAAA,gBACD;AAAA,gBACA;AAAA,kBACE,QAAQ,QAAQ,iBAAiB,SAAS,QAAQ;AAAA,kBAClD,SAAS;AAAA,oBACP,GAAG,QAAQ;AAAA,oBACX,2BAA2B,QAAQ,WAAW,6BAA6B,CAAC,MAAM;AAAA,oBAClF,gBAAgB,QAAQ,WAAW,uBAAuB,SAAS,QAAQ,QAAQ;AAAA;AAAA,oBAEnF,2BAA2B,mBAAmB,CAAC;AAAA,sBAC7C,KAAK;AAAA,sBACL,UAAU,KAAK,OAAO,EAAE,SAAS,EAAE;AAAA,oBACrC,CAAC,IAAI;AAAA,oBACL,uBAAuB;AAAA,oBACvB,eAAe,cAAc,aAAa;AAAA,oBAC1C;AAAA,oBACA,QAAQ,cAAc,MAAM;AAAA,kBAC9B;AAAA,gBACF;AAAA,cACF;AAAA,cACA;AAAA,YACF;AACA,sBAAU,QAAQ,CAAC,OAAO;AACxB,oBAAM,WAAO,4BAAS,EAAE;AACxB,kBAAI,SAAS;AACX,6BAAa,aAAa,IAAI,cAAc,GAAG,QAAQ,IAAI,GAAG,IAAI,EAAE,GAAG,EAAE;AAAA,YAC7E,CAAC;AACD,gBAAI,kBAAkB;AACpB,2BAAa,aAAa;AAAA,gBACxB,cAAc,GAAG,QAAQ,IAAI,OAAG,4BAAS,gBAAgB,CAAC,EAAE;AAAA,gBAC5D;AAAA,cACF;AAAA,YACF;AACA,yBAAa,iBAAiB;AAAA,UAChC;AACA,iBAAO,MAAM,gBAAAA,SAAI,SAAS,QAAQ,OAAO;AAAA,QAC3C;AACA,YAAI,GAAG,WAAW,QAAQ,IAAI,GAAG;AAC/B,gBAAM,MAAM,cAAc,EAAE;AAC5B,cAAI,aAAa,aAAa,IAAI,GAAG;AACnC,mBAAO,MAAM,gBAAAA,SAAI,SAAS,aAAa,aAAa,IAAI,GAAG,GAAG,OAAO;AAAA,QACzE,WAAW,QAAQ,SAAS,KAAK;AAC/B,gBAAM,MAAM,cAAc,GAAG,QAAQ,IAAI,GAAG,GAAG,SAAS,KAAK,GAAG,CAAC,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,EAAE,EAAE;AAC/F,cAAI,aAAa,aAAa,IAAI,GAAG;AACnC,mBAAO,MAAM,gBAAAA,SAAI,SAAS,aAAa,aAAa,IAAI,GAAG,GAAG,OAAO;AAAA,QACzE;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AACA,eAAe,qBAAqB,SAAS,YAAY;AACvD,SAAO,QAAQ,WAAW,oBAAoB,MAAM,QAAQ,WAAW,kBAAkB,QAAI,kBAAAE,SAAS,WAAW,MAAM,UAAU;AACnI;AACA,eAAe,oBAAoB,SAAS,YAAY;AACtD,MAAI,QAAQ,mBAAmB,YAAY,QAAQ,mBAAmB,gBAAgB;AACpF,UAAM,UAAU,MAAM,qBAAqB,SAAS,UAAU;AAC9D,QAAI,KAAC,gBAAAD,YAAY,OAAO;AACtB,qCAAU,SAAS,EAAE,WAAW,KAAK,CAAC;AACxC,UAAM,iBAAa,kBAAAC,SAAS,SAAS,gBAAgB;AACrD,QAAI,CAAC,aAAa,qBAAqB;AACrC,YAAM,gBAAAF,SAAI,UAAU,YAAY,yBAAyB,SAAS,IAAI,GAAG,EAAE,UAAU,OAAO,CAAC;AAC7F,mBAAa,sBAAsB;AAAA,IACrC;AACA,iBAAa,aAAa,IAAI,cAAc,GAAG,QAAQ,IAAI,GAAG,gBAAgB,EAAE,GAAG,UAAU;AAAA,EAC/F;AACF;AACA,SAAS,wBAAwB,QAAQ,KAAK;AAC5C,SAAO,YAAY;AACjB,UAAM,EAAE,SAAS,kBAAkB,IAAI;AACvC,UAAM,EAAE,gBAAgB,OAAO,KAAK,IAAI;AACxC,QAAI,CAAC,qBAAqB,gBAAgB;AACxC,UAAI,mBAAmB;AACrB,gBAAQ,iBAAiB;AAC3B,YAAM,oBAAoB,SAAS,IAAI,UAAU;AACjD,aAAO,GAAG,KAAK;AAAA,QACb,MAAM;AAAA,QACN,OAAO;AAAA,QACP,MAAM;AAAA,UACJ,MAAM,QAAQ;AAAA,UACd;AAAA,UACA,YAAY,GAAG,IAAI,GAAG,WAAW;AAAA,UACjC,cAAc,GAAG,IAAI,GAAG,gBAAgB;AAAA,UACxC,QAAQ,QAAQ,WAAW;AAAA,QAC7B;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AACF;AAGA,SAAS,WAAW,KAAK,KAAK;AAC5B,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,IACT,UAAU,IAAI;AACZ,UAAI,OAAO;AACT,eAAO;AACT,aAAO;AAAA,IACT;AAAA,IACA,KAAK,IAAI;AACP,UAAI,OAAO;AACT,eAAO,gBAAgB,KAAK,GAAG;AAAA,IACnC;AAAA,EACF;AACF;AACA,SAAS,gBAAgB,KAAK,KAAK;AACjC,QAAM,kBAAkB,IAAI,gBAAgB;AAC5C,MAAI,CAAC;AACH,WAAO;AACT,QAAM,EAAE,MAAM,gBAAgB,UAAU,IAAI;AAC5C,QAAM,iBAAiB,IAAI,eAAe;AAC1C,QAAM,QAAQ;AAAA,IACZ,qBAAqB,IAAI;AAAA,IACzB,aAAa;AAAA,MACX;AAAA,MACA;AAAA,MACA,SAAS,UAAU;AAAA,IACrB;AAAA,EACF;AACA,MAAI,gBAAgB;AAClB,UAAM,YAAY,eAAe,YAAY;AAC7C,QAAI,WAAW;AACb,YAAM,EAAE,QAAQ,MAAM,YAAY,cAAc,MAAM,MAAM,IAAI;AAChE,YAAM,aAAa;AAAA,QACjB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,SAAO,0BAA0B,KAAK,UAAU,KAAK,CAAC;AACxD;AAQA,SAAS,wBAAwB,SAAS;AACxC,MAAI,CAAC;AACH,WAAO;AACT,QAAM;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,aAAa;AAAA,IACb,wBAAwB;AAAA,IACxB,uBAAuB;AAAA,IACvB,mBAAmB;AAAA,IACnB;AAAA,EACF,IAAI,WAAW,CAAC;AAChB,QAAM,wBAAwB;AAAA,IAC5B,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ,CAAC,KAAK;AAAA,IACd;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,MAAI,aAAa;AACf,WAAO;AACT,MAAI,YAAY,WAAW,CAAC,CAAC,QAAQ,QAAQ;AAC3C,0BAAsB,WAAW;AACjC,0BAAsB,SAAS,QAAQ;AACvC,WAAO;AAAA,EACT;AACA,MAAI,WAAW;AACb,WAAO;AACT,wBAAsB,WAAW;AACjC,wBAAsB,SAAS;AAC/B,SAAO;AACT;AAGA,SAAS,eAAe,gBAAgB,MAAM,QAAQ,QAAQ,UAAU;AACtE,QAAM,YAAQ,kBAAAG,SAAS,MAAM,QAAQ,QAAQ;AAC7C,MAAI,sBAAkB,2BAAQ,QAAQ,MAAM,SAAS,gBAAAC,QAAI,WAAW,KAAK,GAAG;AAC1E,UAAM,cAAc,GAAG,SAAS,UAAU,GAAG,SAAS,YAAY,GAAG,CAAC,CAAC;AACvE,WAAO;AAAA,MACL;AAAA,MACA,YAAQ,kBAAAD,SAAS,MAAM,QAAQ,WAAW;AAAA,MAC1C;AAAA,IACF;AAAA,EACF;AACA,SAAO;AAAA,IACL;AAAA,IACA,YAAQ,kBAAAA,SAAS,MAAM,QAAQ,QAAQ;AAAA,EACzC;AACF;AACA,eAAe,eAAe,KAAK;AA5uBnC;AA6uBE,QAAM,EAAE,aAAa,SAAS,WAAW,IAAI;AAC7C,QAAM,OAAO,WAAW;AACxB,QAAM,MAAM,gBAAAC,QAAI,WAAW,cAAc,IAAI,KAAK,MAAM,gBAAAA,QAAI,aAAa,gBAAgB,OAAO,CAAC,IAAI,CAAC;AACtG,QAAM;AAAA;AAAA;AAAA,IAGJ,OAAO,oBAAAC,QAAQ,KAAK,EAAE,UAAU,KAAK;AAAA,IACrC,SAAS;AAAA,IACT,SAAS,WAAW,MAAM,UAAU;AAAA,IACpC,iBAAiB;AAAA,IACjB,eAAe;AAAA,IACf,WAAW;AAAA,IACX,mBAAmB;AAAA,IACnB,aAAa;AAAA,IACb,SAAS;AAAA,IACT,OAAO,WAAW;AAAA,IAClB,gBAAgB;AAAA,IAChB,uBAAuB;AAAA,IACvB,iBAAiB;AAAA,IACjB,UAAU;AAAA,IACV,aAAa,EAAE,SAAS,OAAO,MAAM,WAAW,kBAAkB,MAAM;AAAA,IACxE,iBAAiB;AAAA,IACjB,cAAc,CAAC;AAAA,IACf;AAAA,IACA;AAAA,IACA,2CAA2C;AAAA,EAC7C,IAAI;AACJ,QAAM,WAAW,gBAAgB,IAAI;AACrC,QAAM,EAAE,OAAO,QAAQ,YAAY,IAAI;AAAA,IACrC,eAAe;AAAA,IACf;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,QAAM,iBAAa,kBAAAF,SAAS,MAAM,MAAM;AACxC,QAAM,QAAQ,QAAQ,SAAS;AAC/B,MAAI,YAAY,MAAM,WAAW,MAAM,aAAa,QAAQ;AAC5D,MAAI,UAAU,UAAU,SAAS,CAAC,MAAM;AACtC,iBAAa;AACf,QAAM,4BAA4B,IAAI,OAAO,IAAI,UAAU,QAAQ,UAAU,EAAE,CAAC,EAAE;AAClF,QAAM,iBAAiB;AAAA,IACrB;AAAA,IACA,eAAe;AAAA,IACf,wBAAwB;AAAA,IACxB,uBAAuB;AAAA,IACvB;AAAA,IACA;AAAA,IACA,kBAAkB;AAAA,EACpB;AACA,QAAM,wBAAwB;AAAA,IAC5B;AAAA,IACA;AAAA,IACA,eAAe;AAAA,IACf;AAAA,IACA,gBAAgB;AAAA,EAClB;AACA,QAAM,kBAAkB;AAAA,IACtB,MAAM,IAAI;AAAA,IACV,YAAY,IAAI;AAAA,IAChB,aAAa,IAAI;AAAA,IACjB,WAAW;AAAA,IACX,SAAS;AAAA,IACT,kBAAkB;AAAA,IAClB,aAAa;AAAA,IACb,MAAM;AAAA,IACN;AAAA,EACF;AACA,QAAM,UAAU,OAAO,OAAO,CAAC,GAAG,gBAAgB,QAAQ,WAAW,CAAC,CAAC;AACvE,QAAM,WAAW,OAAO,QAAQ,aAAa,aAAa,CAAC,QAAQ,WAAW,QAAQ,OAAO,OAAO,CAAC,GAAG,iBAAiB,QAAQ,YAAY,CAAC,CAAC;AAC/I,QAAM;AAAA,IACJ,cAAc;AAAA,IACd;AAAA,IACA,gBAAgB,CAAC;AAAA,IACjB,eAAe;AAAA,IACf,SAAS,WAAW,MAAM;AAAA,IAC1B,QAAQ,WAAW,WAAW,MAAM;AAAA,IACpC,YAAY,WAAW,MAAM;AAAA,IAC7B;AAAA,IACA;AAAA,IACA,aAAa,CAAC;AAAA,IACd,GAAG;AAAA,EACL,IAAI,QAAQ,kBAAkB,CAAC;AAC/B,QAAM,iBAAiB,OAAO,OAAO,CAAC,GAAG,uBAAuB,kBAAkB;AAClF,OAAK,mBAAmB,UAAU,kBAAkB,SAAS,iBAAiB,cAAc;AAC1F,YAAQ,cAAc;AACtB,YAAQ,eAAe;AAAA,EACzB;AACA,MAAI,eAAe,gBAAgB,QAAQ,cAAc,QAAQ;AAC/D,UAAM,cAAa,gBAAW,UAAX,mBAAkB;AACrC,YAAQ,YAAY,eAAe,QAAQ,eAAe,YAAY,eAAe;AAAA,EACvF;AACA,MAAI,WAAW,WAAW,WAAW,YAAY,SAAS;AACxD,QAAI,eAAe;AACjB,iBAAW,OAAO;AAAA,EACtB,OAAO;AACL,eAAW,UAAU;AACrB,eAAW,OAAO;AAAA,EACpB;AACA,MAAI,UAAU;AACZ,QAAI,SAAS,OAAO;AAClB,eAAS,QAAQ,SAAS,MAAM,IAAI,CAAC,SAAS;AAC5C,YAAI,KAAK,WAAW,MAAM,QAAQ,KAAK,OAAO;AAC5C,eAAK,UAAU,KAAK,QAAQ,KAAK,GAAG;AACtC,eAAO;AAAA,MACT,CAAC;AAAA,IACH;AACA,QAAI,SAAS,WAAW;AACtB,eAAS,UAAU,QAAQ,CAAC,aAAa;AACvC,YAAI,SAAS,OAAO;AAClB,mBAAS,QAAQ,SAAS,MAAM,IAAI,CAAC,SAAS;AAC5C,gBAAI,KAAK,WAAW,MAAM,QAAQ,KAAK,OAAO;AAC5C,mBAAK,UAAU,KAAK,QAAQ,KAAK,GAAG;AACtC,mBAAO;AAAA,UACT,CAAC;AAAA,QACH;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AACA,QAAM;AAAA,IACJ,SAAS,WAAW;AAAA,IACpB,YAAY,WAAW;AAAA,EACzB,IAAI;AACJ,QAAM,yBAAyB;AAAA,IAC7B,MAAM;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,UAAU,eAAe;AAAA,IACzB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,WAAW,aAAa;AAAA,IACxB,6BAA6B;AAAA,MAC3B;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,IACV;AAAA,IACA,4BAA4B;AAAA,MAC1B;AAAA,MACA,QAAQ;AAAA,MACR;AAAA,MACA;AAAA,IACF;AAAA,IACA,0BAA0B;AAAA,MACxB;AAAA,MACA;AAAA,IACF;AAAA,IACA,WAAW,wBAAwB,SAAS;AAAA,IAC5C,oCAAoC,CAAC;AAAA,EACvC;AACA,QAAM,gBAAgB,CAAC,uBAAuB,YAAY,uBAAuB,YAAY,uBAAuB,mBAAmB,WAAW,YAAY,WAAW,uBAAuB,WAAW;AAC3M,MAAI;AACF,UAAM,sBAAsB,wBAAwB,UAAU;AAChE,SAAO;AACT;AAGA,SAAS,WAAW,KAAK,KAAK;AAC5B,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,IACT,SAAS;AACP,aAAO;AAAA,QACL,KAAK;AAAA;AAAA,UAEH,YAAY,CAAC,gBAAgB;AAAA,QAC/B;AAAA,MACF;AAAA,IACF;AAAA,IACA,MAAM,eAAe,QAAQ;AAz6BjC;AA06BM,UAAI,oBAAoB;AACxB,UAAI,aAAa;AACjB,4BAAI,gBAAJ,mBAAiB,gBAAjB,mBAA8B,qBAA9B,4BAAiD,QAAQ,IAAI;AAC7D,UAAI,UAAU,MAAM,eAAe,GAAG;AACtC,UAAI,IAAI,QAAQ,aAAa,CAAC,IAAI,QAAQ,UAAU,UAAU;AAC5D,YAAI,qBAAqB,OAAO,kCAAyB,EAAE,KAAK,CAAC,EAAE,iBAAiB,MAAM,iBAAiB,GAAG,CAAC,EAAE,MAAM,CAAC,MAAM;AAC5H,kBAAQ,MAAM;AAAA,YACZ;AAAA,YACA,KAAK,QAAQ,IAAI,OAAO,EAAE;AAAA,YAC1B,OAAO,2FAA2F;AAAA,YAClG,OAAO,gCAAgC;AAAA,YACvC,OAAO,4EAA4E;AAAA,YACnF,OAAO,gFAAgF;AAAA,UACzF,EAAE,KAAK,IAAI,GAAG,CAAC;AACf,iBAAO,QAAQ,QAAQ,MAAM;AAAA,QAC/B,CAAC;AAAA,MACH;AAAA,IACF;AAAA,IACA,UAAU,IAAI;AACZ,aAAO,gBAAgB,SAAS,EAAE,IAAI,iCAAiC,KAAK;AAAA,IAC9E;AAAA,IACA,KAAK,IAAI;AACP,UAAI,GAAG,WAAW,8BAA8B;AAC9C,aAAK,GAAG,MAAM,+BAA+B,MAAM;AAAA;AAEnD;AACF,UAAI,gBAAgB,SAAS,EAAE,GAAG;AAChC,YAAI,oBAAoB;AACxB,YAAI,IAAI,WAAW,YAAY,WAAW,IAAI,QAAQ,WAAW,SAAS;AACxE,iBAAO;AAAA,YACL,EAAE,GAAG,IAAI,SAAS,UAAU,aAAa,MAAM;AAAA,YAC/C;AAAA,YACA,oBAAoB,EAAE;AAAA,UACxB;AAAA,QACF,OAAO;AACL,iBAAO;AAAA,YACL,IAAI;AAAA,YACJ,CAAC,IAAI,QAAQ,WAAW,IAAI,WAAW,YAAY,UAAU,UAAU;AAAA,YACvE,oBAAoB,EAAE;AAAA,UACxB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA;AAAA,EACF;AACF;AAGA,SAAS,aAAa,KAAK;AACzB,SAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,IACT,oBAAoB;AAAA,MAClB,OAAO;AAAA,MACP,MAAM,QAAQ,MAAM;AAClB,eAAO,MAAM,0BAA0B,MAAM,GAAG;AAAA,MAClD;AAAA,MACA,SAAS;AAAA;AAAA,MAET,MAAM,UAAU,MAAM;AACpB,eAAO,MAAM,0BAA0B,MAAM,GAAG;AAAA,MAClD;AAAA,IACF;AAAA,IACA,UAAU,IAAI;AACZ,cAAQ,MAAM;AAAA,QACZ,KAAK,OAAO;AACV,iBAAO;AAAA,QACT,KAAK,OAAO;AACV,iBAAO;AAAA,QACT;AACE,iBAAO;AAAA,MACX;AAAA,IACF;AAAA,IACA,MAAM,KAAK,IAAI;AACb,UAAI,OAAO,kCAAkC;AAC3C,cAAM,qBAAqB,MAAM,IAAI;AACrC,cAAM,QAAO,yDAAoB,wBAAuB,EAAE,OAAO,CAAC,GAAG,YAAY,OAAO;AACxF,eAAO,gCAAgC,KAAK,UAAU,IAAI,CAAC;AAAA,MAC7D;AACA,UAAI,OAAO,mCAAmC;AAC5C,cAAM,qBAAqB,MAAM,IAAI;AACrC,cAAM,QAAQ,aAAa,yDAAoB,cAAc;AAC7D,eAAO,iCAAiC,KAAK,UAAU,KAAK,CAAC;AAAA,MAC/D;AAAA,IACF;AAAA,IACA,MAAM,gBAAgB,EAAE,MAAM,OAAO,GAAG;AACtC,YAAM,qBAAqB,MAAM,IAAI;AACrC,UAAI,OAAM,yDAAoB,eAAe,QAAO;AAClD,cAAM,UAAU,CAAC;AACjB,cAAM,OAAO,OAAO,YAAY,cAAc,gCAAgC;AAC9E,gBAAQ,QAAQ,KAAK,IAAI;AACzB,cAAM,QAAQ,OAAO,YAAY,cAAc,iCAAiC;AAChF,iBAAS,QAAQ,KAAK,KAAK;AAC3B,YAAI;AACF,iBAAO;AACT,eAAO,GAAG,KAAK,EAAE,MAAM,cAAc,CAAC;AACtC,eAAO,CAAC;AAAA,MACV;AAAA,IACF;AAAA,IACA,gBAAgB,QAAQ;AACtB,aAAO,GAAG,GAAG,gBAAgB,yBAAyB,KAAK,MAAM,CAAC;AAClE,aAAO,YAAY,IAAI,OAAO,KAAK,KAAK,SAAS;AAC/C,cAAM,MAAM,IAAI;AAChB,YAAI,CAAC;AACH,iBAAO,KAAK;AACd,YAAI,CAAC,0BAA0B,KAAK,GAAG;AACrC,iBAAO,KAAK;AACd,cAAM,qBAAqB,MAAM,IAAI;AACrC,YAAI,CAAC;AACH,iBAAO,KAAK;AACd,cAAM,OAAO,MAAM,mBAAmB,cAAc,GAAG;AACvD,YAAI,CAAC;AACH,iBAAO,KAAK;AACd,YAAI,KAAK,MAAM,GAAG;AAChB,gBAAM,kBAAkB,IAAI,QAAQ,mBAAmB,KAAK,IAAI,QAAQ,mBAAmB;AAC3F,gBAAM,qBAAqB,kBAAkB,MAAM,QAAQ,eAAe,IAAI,gBAAgB,CAAC,IAAI,kBAAkB;AACrH,cAAI,sBAAsB,IAAI,KAAK,KAAK,YAAY,EAAE,QAAQ,IAAI,OAAO,IAAI,KAAK,kBAAkB,EAAE,QAAQ,IAAI,KAAK;AACrH,gBAAI,aAAa;AACjB,gBAAI,IAAI;AACR;AAAA,UACF;AAAA,QACF;AACA,cAAM,SAAS,MAAM,KAAK;AAC1B,YAAI,UAAU,OAAO,KAAK,MAAM,GAAG;AACnC,YAAI,UAAU,gBAAgB,KAAK,QAAQ;AAC3C,YAAI,UAAU,kBAAkB,OAAO,MAAM;AAC7C,YAAI,UAAU,iBAAiB,IAAI,KAAK,KAAK,YAAY,EAAE,YAAY,CAAC;AACxE,YAAI,aAAa;AACjB,YAAI,IAAI,MAAM;AAAA,MAChB,CAAC;AAAA,IACH;AAAA,EACF;AACF;AACA,eAAe,0BAA0B,MAAM,KAAK;AAClD,MAAI,IAAI,kBAAkB,IAAI,QAAQ,WAAW;AAC/C,WAAO;AACT,QAAM,qBAAqB,MAAM,IAAI;AACrC,MAAI,CAAC;AACH,WAAO;AACT,SAAO,mBAAmB,mBAAmB,IAAI;AACnD;AACA,SAAS,yBAAyB,KAAK,QAAQ;AAC7C,SAAO,YAAY;AACjB,UAAM,qBAAqB,MAAM,IAAI;AACrC,QAAI,oBAAoB;AACtB,YAAM,OAAO,mBAAmB,kBAAkB;AAClD,aAAO,GAAG,KAAK;AAAA,QACb,MAAM;AAAA,QACN,OAAO;AAAA,QACP;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF;AACF;AAGA,IAAI,cAAc;AAAA,EAChB;AAAA,IACE,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,SAAS;AAAA,MACP,WAAW;AAAA,MACX,YAAY;AAAA,QACV,YAAY;AAAA,QACZ,eAAe,MAAM,KAAK,KAAK;AAAA;AAAA,MAEjC;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,SAAS;AAAA,MACP,WAAW;AAAA,MACX,YAAY;AAAA,QACV,YAAY;AAAA,QACZ,eAAe,IAAI,KAAK,KAAK;AAAA;AAAA,MAE/B;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,SAAS;AAAA,MACP,WAAW;AAAA,MACX,YAAY;AAAA,QACV,YAAY;AAAA,QACZ,eAAe,KAAK,KAAK;AAAA;AAAA,MAE3B;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,SAAS;AAAA,MACP,WAAW;AAAA,MACX,YAAY;AAAA,QACV,YAAY;AAAA,QACZ,eAAe,KAAK,KAAK;AAAA;AAAA,MAE3B;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,SAAS;AAAA,MACP,WAAW;AAAA,MACX,YAAY;AAAA,QACV,YAAY;AAAA,QACZ,eAAe,KAAK,KAAK;AAAA;AAAA,MAE3B;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,SAAS;AAAA,MACP,WAAW;AAAA,MACX,YAAY;AAAA,QACV,YAAY;AAAA,QACZ,eAAe,KAAK,KAAK;AAAA;AAAA,MAE3B;AAAA,IACF;AAAA,EACF;AAAA,EACA;AAAA,IACE,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,SAAS;AAAA,MACP,WAAW;AAAA,MACX,YAAY;AAAA,QACV,YAAY;AAAA,QACZ,eAAe,KAAK,KAAK;AAAA;AAAA,MAE3B;AAAA,MACA,uBAAuB;AAAA;AAAA,IAEzB;AAAA,EACF;AAAA,EACA;AAAA;AAAA,IAEE,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,SAAS;AAAA,MACP,WAAW;AAAA,MACX,YAAY;AAAA,QACV,YAAY;AAAA,QACZ,eAAe,KAAK,KAAK;AAAA;AAAA,MAE3B;AAAA,MACA,uBAAuB;AAAA,IACzB;AAAA,EACF;AACF;AAGA,SAAS,QAAQ,cAAc,CAAC,GAAG;AACjC,QAAM,MAAM,cAAc,WAAW;AACrC,QAAM,MAAM,UAAU,GAAG;AACzB,SAAO;AAAA,IACL,WAAW,KAAK,GAAG;AAAA,IACnB,WAAW,KAAK,GAAG;AAAA,IACnB,YAAY,GAAG;AAAA,IACf,UAAU,GAAG;AAAA,IACb,aAAa,GAAG;AAAA,EAClB;AACF;",
  "names": ["import_node_fs", "import_node_path", "import_node_fs", "import_node_path", "import_node_url", "crypto", "fs", "resolveFs", "fs2", "resolve2", "dirname2", "fileURLToPath2", "resolve3", "fs3", "existsSync2", "resolve4", "resolve5", "fs4", "process"]
}
