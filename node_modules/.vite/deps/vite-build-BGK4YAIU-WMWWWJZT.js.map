{
  "version": 3,
  "sources": ["../../vite-plugin-pwa/dist/vite-build-BGK4YAIU.js"],
  "sourcesContent": ["import {\n  logSWViteBuild,\n  logWorkboxResult,\n  normalizePath\n} from \"./chunk-G4TAN34B.js\";\nimport \"./chunk-LKBIOQSP.js\";\n\n// src/vite-build.ts\nimport { promises as fs } from \"node:fs\";\nimport { basename, dirname, relative, resolve } from \"node:path\";\nasync function buildSW(version, options, viteOptions, workboxPromise) {\n  await options.integration?.beforeBuildServiceWorker?.(options);\n  const { build } = await import(\"vite\");\n  const {\n    inlineConfig,\n    format,\n    swName,\n    swMjsName\n  } = prepareViteBuild(options, viteOptions);\n  logSWViteBuild(version, normalizePath(relative(viteOptions.root, options.swSrc)), viteOptions, format);\n  await options.integration?.configureCustomSWViteBuild?.(inlineConfig);\n  await build(inlineConfig);\n  if (format !== \"iife\") {\n    const swDestDir = dirname(options.swDest);\n    const mjsPath = resolve(swDestDir, swMjsName);\n    const jsPath = resolve(swDestDir, swName);\n    await fs.rename(mjsPath, jsPath);\n    const mjsMapPath = `${mjsPath}.map`;\n    const sourceMap = await fs.lstat(mjsMapPath).then((s) => s.isFile()).catch(() => false);\n    if (sourceMap) {\n      await Promise.all([\n        fs.readFile(jsPath, \"utf-8\").then((content) => fs.writeFile(\n          jsPath,\n          content.replace(`${swMjsName}.map`, `${swName}.map`),\n          \"utf-8\"\n        )),\n        fs.rename(mjsMapPath, `${jsPath}.map`)\n      ]);\n    }\n  }\n  if (!options.injectManifest.injectionPoint)\n    return;\n  const injectManifestOptions = {\n    ...options.injectManifest,\n    // this will not fail since there is an injectionPoint\n    swSrc: options.injectManifest.swDest\n  };\n  const { injectManifest } = await workboxPromise;\n  const buildResult = await injectManifest(injectManifestOptions);\n  logWorkboxResult(\n    version,\n    options.throwMaximumFileSizeToCacheInBytes,\n    \"injectManifest\",\n    buildResult,\n    viteOptions,\n    format\n  );\n}\nfunction prepareViteBuild(options, viteOptions) {\n  const define = { ...viteOptions.define ?? {} };\n  const nodeEnv = options.injectManifestBuildOptions.enableWorkboxModulesLogs ? \"development\" : process[\"env\"][\"NODE_ENV\"] || \"production\";\n  define[\"process.env.NODE_ENV\"] = JSON.stringify(nodeEnv);\n  const buildPlugins = options.buildPlugins;\n  const {\n    format,\n    plugins,\n    rollupOptions\n  } = options.injectManifestRollupOptions;\n  const inlineConfig = {\n    root: viteOptions.root,\n    base: viteOptions.base,\n    resolve: viteOptions.resolve,\n    mode: viteOptions.mode,\n    envDir: options.injectManifestEnvOptions.envDir,\n    envPrefix: options.injectManifestEnvOptions.envPrefix,\n    // don't copy anything from public folder\n    publicDir: false,\n    build: {\n      target: options.injectManifestBuildOptions.target,\n      minify: options.injectManifestBuildOptions.minify,\n      sourcemap: options.injectManifestBuildOptions.sourcemap,\n      outDir: options.outDir,\n      emptyOutDir: false\n    },\n    configFile: false,\n    define,\n    plugins: buildPlugins?.vite\n  };\n  const swName = basename(options.swDest);\n  const swMjsName = swName.replace(/\\.js$/, \".mjs\");\n  if (format !== \"iife\") {\n    if (viteOptions.build.sourcemap) {\n      Object.assign(inlineConfig, {\n        ...inlineConfig,\n        esbuild: {\n          sourcemap: viteOptions.build.sourcemap === \"hidden\" ? true : viteOptions.build.sourcemap\n        }\n      });\n    }\n    Object.assign(inlineConfig.build, {\n      ...inlineConfig.build,\n      modulePreload: false,\n      rollupOptions: {\n        ...rollupOptions,\n        plugins: buildPlugins?.rollup ?? plugins,\n        input: options.swSrc,\n        output: {\n          entryFileNames: swMjsName,\n          inlineDynamicImports: true\n        }\n      }\n    });\n  } else {\n    Object.assign(inlineConfig.build, {\n      ...inlineConfig.build,\n      lib: {\n        entry: options.swSrc,\n        name: \"app\",\n        formats: [format]\n      },\n      rollupOptions: {\n        ...rollupOptions,\n        plugins: buildPlugins?.rollup ?? plugins,\n        output: {\n          entryFileNames: swName\n        }\n      }\n    });\n  }\n  return {\n    inlineConfig,\n    swName,\n    swMjsName,\n    format\n  };\n}\nexport {\n  buildSW\n};\n"],
  "mappings": "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",
  "names": ["fs"]
}
