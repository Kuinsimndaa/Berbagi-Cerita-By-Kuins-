{
  "version": 3,
  "sources": ["../../vite-plugin-pwa/dist/generator-QYK42GLH.js", "optional-peer-dep:__vite-optional-peer-dep:@vite-pwa/assets-generator/api/generate-assets:vite-plugin-pwa", "optional-peer-dep:__vite-optional-peer-dep:@vite-pwa/assets-generator/api/instructions:vite-plugin-pwa", "optional-peer-dep:__vite-optional-peer-dep:@vite-pwa/assets-generator/config:vite-plugin-pwa", "optional-peer-dep:__vite-optional-peer-dep:@vite-pwa/assets-generator/api/generate-html-markup:vite-plugin-pwa", "optional-peer-dep:__vite-optional-peer-dep:@vite-pwa/assets-generator/api/generate-manifest-icons-entry:vite-plugin-pwa"],
  "sourcesContent": ["import {\n  checkForHtmlHead,\n  extractIcons,\n  mapLink\n} from \"./chunk-I2Z7IWCN.js\";\nimport {\n  cyan,\n  red\n} from \"./chunk-LKBIOQSP.js\";\n\n// src/pwa-assets/build.ts\nimport { mkdir } from \"node:fs/promises\";\nimport { generateAssets } from \"@vite-pwa/assets-generator/api/generate-assets\";\nasync function generate(assetsGeneratorContext) {\n  await mkdir(assetsGeneratorContext.imageOutDir, { recursive: true });\n  await generateAssets(assetsGeneratorContext.assetsInstructions, true, assetsGeneratorContext.imageOutDir);\n}\n\n// src/pwa-assets/config.ts\nimport { readFile } from \"node:fs/promises\";\nimport { basename, dirname, relative, resolve } from \"node:path\";\nimport { instructions } from \"@vite-pwa/assets-generator/api/instructions\";\nimport { loadConfig } from \"@vite-pwa/assets-generator/config\";\nasync function loadAssetsGeneratorContext(ctx, assetsGeneratorContext) {\n  const root = ctx.viteConfig.root ?? process.cwd();\n  const { config, sources } = await loadConfiguration(root, ctx);\n  if (!config.preset) {\n    console.error([\n      \"\",\n      cyan(`PWA v${ctx.version}`),\n      red(\"ERROR: No preset for assets generator found\")\n    ].join(\"\\n\"));\n    return;\n  }\n  const {\n    preset,\n    images,\n    headLinkOptions: userHeadLinkOptions\n  } = config;\n  if (!images) {\n    console.error([\n      \"\",\n      cyan(`PWA v${ctx.version}`),\n      red(\"ERROR: No image provided for assets generator\")\n    ].join(\"\\n\"));\n    return;\n  }\n  if (Array.isArray(images)) {\n    if (!images.length) {\n      console.error([\n        \"\",\n        cyan(`PWA v${ctx.version}`),\n        red(\"ERROR: No image provided for assets generator\")\n      ].join(\"\\n\"));\n      return;\n    }\n    if (images.length > 1) {\n      console.error([\n        \"\",\n        cyan(`PWA v${ctx.version}`),\n        red(\"ERROR: Only one image is supported for assets generator\")\n      ].join(\"\\n\"));\n      return;\n    }\n  }\n  const pwaAssets = ctx.options.pwaAssets;\n  const useImage = Array.isArray(images) ? images[0] : images;\n  const imageFile = resolve(root, useImage);\n  const publicDir = pwaAssets.integration?.publicDir ?? resolve(root, ctx.viteConfig.publicDir || \"public\");\n  const outDir = pwaAssets.integration?.outDir ?? resolve(root, ctx.viteConfig.build?.outDir || \"dist\");\n  const imageName = relative(publicDir, imageFile);\n  const imageOutDir = dirname(resolve(outDir, imageName));\n  const xhtml = userHeadLinkOptions?.xhtml === true;\n  const includeId = userHeadLinkOptions?.includeId === true;\n  const assetsInstructions = await instructions({\n    imageResolver: () => readFile(imageFile),\n    imageName,\n    preset,\n    faviconPreset: userHeadLinkOptions?.preset ?? pwaAssets.htmlPreset,\n    htmlLinks: { xhtml, includeId },\n    basePath: pwaAssets.integration?.baseUrl || ctx.viteConfig.base || \"/\",\n    resolveSvgName: userHeadLinkOptions?.resolveSvgName ?? ((name) => basename(name))\n  });\n  const {\n    includeHtmlHeadLinks = true,\n    overrideManifestIcons: useOverrideManifestIcons,\n    injectThemeColor = false\n  } = pwaAssets;\n  const overrideManifestIcons = ctx.options.manifest === false || !ctx.options.manifest ? false : \"icons\" in ctx.options.manifest ? useOverrideManifestIcons : true;\n  if (assetsGeneratorContext === void 0) {\n    return {\n      lastModified: Date.now(),\n      assetsInstructions,\n      cache: /* @__PURE__ */ new Map(),\n      useImage,\n      imageFile,\n      publicDir,\n      outDir,\n      imageName,\n      imageOutDir,\n      xhtml,\n      includeId,\n      // normalize sources\n      sources: sources.map((source) => source.replace(/\\\\/g, \"/\")),\n      injectThemeColor,\n      includeHtmlHeadLinks,\n      overrideManifestIcons\n    };\n  }\n  assetsGeneratorContext.lastModified = Date.now();\n  assetsGeneratorContext.assetsInstructions = assetsInstructions;\n  assetsGeneratorContext.useImage = useImage;\n  assetsGeneratorContext.imageFile = imageFile;\n  assetsGeneratorContext.outDir = outDir;\n  assetsGeneratorContext.imageName = imageName;\n  assetsGeneratorContext.imageOutDir = imageOutDir;\n  assetsGeneratorContext.xhtml = xhtml;\n  assetsGeneratorContext.includeId = includeId;\n  assetsGeneratorContext.injectThemeColor = injectThemeColor;\n  assetsGeneratorContext.includeHtmlHeadLinks = includeHtmlHeadLinks;\n  assetsGeneratorContext.overrideManifestIcons = overrideManifestIcons;\n  assetsGeneratorContext.cache.clear();\n}\nasync function loadConfiguration(root, ctx) {\n  const pwaAssets = ctx.options.pwaAssets;\n  if (pwaAssets.config === false) {\n    return await loadConfig(root, {\n      config: false,\n      preset: pwaAssets.preset,\n      images: pwaAssets.images,\n      logLevel: \"silent\"\n    });\n  }\n  return await loadConfig(\n    root,\n    typeof pwaAssets.config === \"boolean\" ? root : { config: pwaAssets.config }\n  );\n}\n\n// src/pwa-assets/dev.ts\nasync function findIconAsset(path, { assetsInstructions, cache, lastModified }) {\n  let resolved = cache.get(path);\n  if (resolved) {\n    resolved.age = Date.now() - lastModified;\n    return resolved;\n  }\n  const iconAsset = assetsInstructions.transparent[path] ?? assetsInstructions.maskable[path] ?? assetsInstructions.apple[path] ?? assetsInstructions.favicon[path] ?? assetsInstructions.appleSplashScreen[path];\n  if (!iconAsset)\n    return;\n  if (iconAsset) {\n    resolved = {\n      path,\n      mimeType: iconAsset.mimeType,\n      buffer: iconAsset.buffer(),\n      lastModified: Date.now(),\n      age: 0\n    };\n    cache.set(path, resolved);\n    return resolved;\n  }\n}\nasync function checkHotUpdate(file, ctx, assetsGeneratorContext) {\n  const result = assetsGeneratorContext.sources.includes(file);\n  if (result)\n    await loadAssetsGeneratorContext(ctx, assetsGeneratorContext);\n  return result;\n}\n\n// src/pwa-assets/html.ts\nimport { generateHtmlMarkup } from \"@vite-pwa/assets-generator/api/generate-html-markup\";\nfunction transformIndexHtml(html, ctx, assetsGeneratorContext) {\n  if (assetsGeneratorContext.injectThemeColor) {\n    const manifest = ctx.options.manifest;\n    if (manifest && \"theme_color\" in manifest && manifest.theme_color) {\n      html = checkForHtmlHead(html).replace(\n        \"</head>\",\n        `\n<meta name=\"theme-color\" content=\"${manifest.theme_color}\"></head>`\n      );\n    }\n  }\n  if (assetsGeneratorContext.includeHtmlHeadLinks) {\n    const link = generateHtmlMarkup(assetsGeneratorContext.assetsInstructions);\n    if (link.length)\n      html = checkForHtmlHead(html).replace(\"</head>\", `\n${link.join(\"\\n\")}</head>`);\n  }\n  return html;\n}\nfunction resolveHtmlAssets(ctx, assetsGeneratorContext) {\n  const header = {\n    links: [],\n    themeColor: void 0\n  };\n  if (assetsGeneratorContext.injectThemeColor) {\n    const manifest = ctx.options.manifest;\n    if (manifest && \"theme_color\" in manifest && manifest.theme_color)\n      header.themeColor = { name: \"theme-color\", content: manifest.theme_color };\n  }\n  if (assetsGeneratorContext.includeHtmlHeadLinks) {\n    const includeId = assetsGeneratorContext.includeId;\n    const instruction = assetsGeneratorContext.assetsInstructions;\n    const favicon = Array.from(Object.values(instruction.favicon));\n    const apple = Array.from(Object.values(instruction.apple));\n    const appleSplashScreen = Array.from(Object.values(instruction.appleSplashScreen));\n    favicon.forEach((icon) => icon.linkObject && header.links.push(mapLink(includeId, icon.linkObject)));\n    apple.forEach((icon) => icon.linkObject && header.links.push(mapLink(includeId, icon.linkObject)));\n    appleSplashScreen.forEach((icon) => icon.linkObject && header.links.push(mapLink(includeId, icon.linkObject)));\n  }\n  return header;\n}\n\n// src/pwa-assets/manifest.ts\nimport { generateManifestIconsEntry } from \"@vite-pwa/assets-generator/api/generate-manifest-icons-entry\";\nfunction injectManifestIcons(ctx, assetsGeneratorContext) {\n  if (!assetsGeneratorContext.overrideManifestIcons)\n    return;\n  const manifest = ctx.options.manifest;\n  if (manifest) {\n    manifest.icons = generateManifestIconsEntry(\n      \"object\",\n      assetsGeneratorContext.assetsInstructions\n    ).icons;\n  }\n}\n\n// src/pwa-assets/generator.ts\nasync function loadInstructions(ctx) {\n  const assetsGeneratorContext = await loadAssetsGeneratorContext(ctx);\n  if (!assetsGeneratorContext)\n    return;\n  return {\n    generate: () => generate(assetsGeneratorContext),\n    findIconAsset: (path) => findIconAsset(path, assetsGeneratorContext),\n    resolveHtmlAssets: () => resolveHtmlAssets(ctx, assetsGeneratorContext),\n    transformIndexHtml: (html) => transformIndexHtml(html, ctx, assetsGeneratorContext),\n    injectManifestIcons: () => injectManifestIcons(ctx, assetsGeneratorContext),\n    instructions: () => assetsGeneratorContext.assetsInstructions,\n    icons: () => extractIcons(assetsGeneratorContext.assetsInstructions),\n    checkHotUpdate: (file) => checkHotUpdate(file, ctx, assetsGeneratorContext)\n  };\n}\nexport {\n  loadInstructions\n};\n", "throw new Error(`Could not resolve \"@vite-pwa/assets-generator/api/generate-assets\" imported by \"vite-plugin-pwa\". Is it installed?`)", "throw new Error(`Could not resolve \"@vite-pwa/assets-generator/api/instructions\" imported by \"vite-plugin-pwa\". Is it installed?`)", "throw new Error(`Could not resolve \"@vite-pwa/assets-generator/config\" imported by \"vite-plugin-pwa\". Is it installed?`)", "throw new Error(`Could not resolve \"@vite-pwa/assets-generator/api/generate-html-markup\" imported by \"vite-plugin-pwa\". Is it installed?`)", "throw new Error(`Could not resolve \"@vite-pwa/assets-generator/api/generate-manifest-icons-entry\" imported by \"vite-plugin-pwa\". Is it installed?`)"],
  "mappings": "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",
  "names": ["import_promises"]
}
